组织：中国互动出版网（http://www.china-pub.com/）
RFC文档中文翻译计划（http://www.china-pub.com/compters/emook/aboutemook.htm）
E-mail：ouyang@china-pub.com
译者：董辉（lonemonkey  lonemonkey12@263.net）
译文发布时间：2001-9-10
版权：本中文翻译文档版权归中国互动出版网所有。可以用于非商业用途自由转载，但必须
保留本文档的翻译及版权信息。




Network Working Group                                     S. Waldbusser
Request for Comments: 2021                                          INS
Category: Standards Track                                  January 1997


远程网络监控管理信息基础版本2
使用 SMIv2
（RFC2021――Remote Network Monitoring Management Information Base
                               Version 2
using SMIv2 ）

此备忘录简介

   此文件为因特网规定了一个因特网标准堆栈协议,并为此的发展呼吁讨论和建议.此
   协议的标准情形和状态请参阅"因特网官方协议标准"(STD1)最新版本.此备忘录的
   产博士不受限制的.



摘要
   此备忘录为在TCP/IP为基础的因特网中使用网络管理协议定义了一个管理信息基础
   (MIB)协议.详细的,它定义了管理遥远网络警戒装置的对象.









目录

1. 网络管理框架	2
2.  总述	3
2.1.  遥远网络管理的目的	3
2.2.  MIB的结构	4
3. 遥远网络检测装置的控制	5
3.1.  多重管理装置之间的共享资源	6
3.2.  多重管理中心中的行增加	7
4.  协议	8
5.  RMON 2 协议	8
5.1.  术语应用层的使用	8
5.2. 协议目录和有限扩展	8
5.3.  信息包中的错误	9
6.  定义	9
7.  安全考虑	107
8. 附录 -  时间过滤器执行注意事项	107
1) 操作理论	107
2) 时间过滤器例子	109
9.  感谢	113
10.  参考	113
11.  作者地址	114

1. 网络管理框架


   因特网标准网络管理框架由以下三部分构成:

   RFC 1902 [1],定义了SMI,以前为了管理的目的描述和命名对象.

   RFC 1213, STD 17, [3],定义了MIB-II,为因特网协议组定义了核心管理对象.

   RFC 1905 [4] 定义了SNMP,此协议用作网络访问管理对象.

   这个框架结构允许处于试验和评估的目的定义新对象.


   管理对象通过一个基于MIB的虚拟的信息存储空间进行.在一个给定的MIB模块,使用
   SMI的OBJECT-TYPE宏定义对象.最简单情况下,每个对象有一个名称,一个语法结构,
   一个访问层和一个执行状态.

   名称是一个对象标示符,一个管理的赋值名称指定了一个对象类型.对象类型和对象实例
   一同唯一确定对象的特殊例示.从人的角度考虑,我们经常使用受对象标示符限制的文本
   字符串来指对象类型.

   对象类型的语法定义了相应与那个对象类型的抽象的数据类型.为此目的使用ASN.1 [6]
   语言.但是RFC 1902故意限制可能使用的ASN.1机构.设置此限制时考虑到了简便性.

   对象类型的访问层定义了是否设立了一个"协议"去读和/或写对象类型的一个界面的值.
   (此访问层独立于任何管理授权方针.)

   对象类型的执行方针,描述了一个对象是否是强制性的,可选择的,废弃的或是不支持的.

2.  总述

   此文档借助于提供一个主要的有特色的升级特别是向上给应用层提供一个RMON
     分析,来继续构建在ROMN MIB(RFC 1157)中构造的体系.遥远网络警示装置,常
   被称为监视器或者探测器,是为了管理网络而存在的工具.经常的,这些遥远检测
   器是单机设备和有重大意义的因特网资源,对管理网络这一单独的目的来说.一个

   团体为管理它的网络可以使用多个这样的装置,每个网络段一个.特别的,这些设备可
   以供一个网络管理服务提供者使用来访问用户网络,这些网络在地理上常常是遥远的.

   此文件中定义的对象被特意当作一个RMON代理装置和一个RMON管理应用软件之间
   的界面,并避免直接被人操作.也许一些用户能忍受一些这样的对象直接显示,但是很少
   愿忍受手工操作对象.这些功能应当由管理应用软件来完成.

2.1.  遥远网络管理的目的

    o 离线操作
        存在一个管理中心不是始终与其遥远警示装置保持连结状态
        的情况.有时这是为了降低通信代价(特别是基于瓦WAN或者
        拨号上网时的通信情形),有时是因为某些错误例如网络问题
        影响了管理中心和探测器之间的通信.

        因为这些原因,此MIB允许配置一个探测器去完成检测功能和
        不停地搜集统计学表格,即使当与管理中心的通信不可能或有

        效的时候.当异常的情况发生的时候,此探测器就会F尝试通报
        管理中心.这样,即使当管理中心与探测器之间的通信不连续,
        失败的情况下,执行和结构信息也可以连续的获得,并可便利
        的有效的传送给管理中心.

    o 正面警示
        提供关于监视器的可的信息,对它运行诊断功能并登记网络的性能
        是有潜在的好处的.监视器在失败的攻击下常常是有用的.它可以通
        报失败的管理状态并能够存储此失败的以前的统计学信息.此统计学
        信息可以被管理中心回放以便于进一步的诊断这个问题的原因.

    o 问题探测和报告
        监视器可以被设置去判断状态,大多数显著错误条件,并不间断的核
        查他们.当其中的一个条件出现了,此事件将会被登记,且管理中心
        也可以通过一系列措施得到通知.

    o 评估增加的数据
        因为一个遥远检测装置向网络功能专一的提供网络资源,并且他直接
        处于网络的监测部分,遥远监测装置有机会向他所接收的数据提供有
        意义的评估.例如,突出那些最频繁应用或者出错误的主机,探测器可
        以向管理中心提供适当的信息以解决一系列问题.

    o 多重管理
        一个机构也许会有多重管理中心为它的不同的具有不同功能(例如,
        工程和操作)的单位,有时也考虑到灾难恢复的问题.因为具有多重
        管理的工作环境是很普通的,遥远网络检测装置必须在处理本身资源
        的同时,处理他本身管理范围的工作.
2.2.  MIB的结构


   此对象可以安以下的组安排:

        - 协议目录

        - 协议分配

        - 地址映射

        - 网络层主机

        - 网络层矩阵

        - 应用层主机

        - 应用层矩阵


        - 用户记录

        - 探测器配置

   这些组是回应的基础单元.如果一个遥远检测设备实现了一个组,他必须执行那个组中
   的所有对象.例如,一个受管理的实现网络管理层矩阵组必须实现nl矩阵SD表格和
   nl矩阵DS表格.

   此MIB的执行同时实现MIB-II [3]的系统和界面组. MIB-II同时托管附加的组.

   定义这些组是为了提供一个分配对象标示符的手段,也是为了向受控的代理装置提供
   一个得知那些是必须任务的方法.

   此文件也包含定义在RMONＭＩＢ[RFC 1757]中的表格的增加.这些增加包括:


    1) 给定义在RMON MIB中的每个表格增加了DroppedFrames和LastCreateTime
       协议.

    2) 增加了RMON滤波器表格,基于允许一个与标准协议稍有偏差的滤波器存在,甚
       至当这个协议报头是变长度的.

    3) 为WAN媒体和其他的媒体增加了RMON过滤器和具有附加位的捕获状态位.这些位是:


        Bit     定义
        6       对WAN媒体,此位为从一个方向信息包的到来而设定,当信息包从另外一个
                方向到来是清除.对指定为某方向的位来说,它是一
                个执行独特的对象,但是对所有被代理装置接收到的信息包来说,它必须是
一致的,并且如果代理装置得知
                链接的哪一端是"本地"那一端是"网络"时,为信息包
                设定的位必须从"本地"端进行,并从网络端删除.

        7       对任意媒体,为任意信息包设立的这位都含有一个物理
                层错误.此位的设立可能为了增加标示相同情况的媒体
                特殊位.


        8       对任意的媒体,为每个信息包设定的这个位对此媒体来说
                都太短了.此位的设立可能为了增加标示相同情况的媒体
                特殊位.

        9       对任意的媒体,为每个信息包设定的这个位对此媒体来说

                都太长了.此位的设立可能为了增加标示相同情况的媒体
                特殊位.

   由RMON-2探测器实现的这些增加,此探测器还实现RNOM并向探测器增加任何
   顺应当前RNOM的要求.

3. 遥远网络检测装置的控制

   考虑到这些装置中的可得功能的复杂状态,这些功能经常需要用户配置.在许多情况下,
   为了数据搜集操作,这些功能要求参数设定为开.只有当这些参量都设为开后操作才能
   够继续.

   在此MIB中的许多功能有一个或者多个表格,其中设立控制参量,其中的一个或多个表格
   放置操作的结果.当数据表格被有代表性的读/写时,自然状态下控制表格被有代表性的
   读/写.


   因为控制表格中的参量经常描述数据表格中的结果数据,许多参数只有当控制实体没有
   工作时才可以被更改.这样,更改这些参数的方法是实体处于空闲状态,履行SNMP设置
   操作来进行更改这些实体,并使其处于不工作状态.删除控制实体将删除任何相关联的
   数据,这也提供了一个便利的方法来收回被相关数据占用的资源.


   此MIB中的一些对象提供了一种完成遥远检测装置上操作的机制.这些对象可借助于改
   变对象上的状态来实现操作.对此MIB中的那些对象,一个对某对象设定它常常保存的
   值同样的值的指令不会引起任何操作.

   为了便利受多重管理控制,管理装置之间应当共享资源.这些资源主要指一项功能需求
   存储和计算资源.

3.1.  多重管理装置之间的共享资源

   当多重管理装置想调用设备上一抢手的函数时,很需要一个方法来便利资源的共享.
   可能的竞争包括:

    o 两个管理装置同时需要一些增加系统存储的资源.

    o 一个管理装置很长时间占用大量资源.
    o 一个管理装置使用一些资源并突然断开,没有向其他可能使用他们的装置释放这些资
      源.


   业主串机制被提供给此MIB中起作用的每个管理装置,以避免这些竞争并有助于解决这些
问
   题,当他们发生的时候.每个功能有一个标签用来标明此功能的提供者(业主).此标签被业
主
   设定为了避免以下可能:

    o 管理装置辨识到他自己的资源不再需要.
    o 网络操作员找到拥有某资源的管理装置并请求它予以释放.

    o 网络操作员单方面决定释放另一个网络操作员的资源.

    o 初始条件下,管理装置可意识到它以前保留的资源.借助于此信息,它可以释放它不再

      需要的资源.

   管理装置和检测器必须支持由设备的当前协议定义的业主串的形式.此要求这个串包含下
   面的一项或多项:IP地址,管理装置名称,网管名称,地址或电话号码.此信息将有助于更
有效的共享信息.

   此经常广泛地暗示装置或者监视器的操作者(常常是网管)需要被设定.这样与此功能有关
   系的信息被装置本身或者网管拥有,并定义为永存的.在这种情况下,装置或者网管将定义
   相关的业主用一个以"monitor"开头的字符串.由网络管理装置决定结构的监视器的无区
别的修改将是无用的.实际上,网络管理装置应当在检测器管理的机制下更改对象.

   当控制列被一个应用软件设定的时候,一个检测器上的资源是缺乏的并被有代表性的
   分配.许多一用软件可能同时使用检测器,不加区分的向单独的应用软件分配资源会
   导致检测器资源不足.

   当一个网络管理装置需要利用监视器上的一个功能,它需要先扫描那项功能的控制表
   格选择一个适当的时机来共享资源.对那些由那些很少改变的监视器决定的情况这是
   很正确的,如果一个管理装置想共享另外一个管理装置上的资源,它必须明确,他会被

       拥有此资源的管理装置可能被无区别的更改或删除.

   必须指出,一个管理软件必须被一个监视器拥有的列中大部分支持.管理程序拥有的一
   排只有较短的存在时间,因为一个网络管理员更可能更改只有一个用户使用的资源而不
   是那些可能被几个用户使用的资源.一个由另外的应用软件控制的行有更短的存在时间,
   因为可能被其他应用程序可能按照他自己的判断删除或者更改.

3.2.  多重管理中心中的行增加

   新行的增加通过RFC 1903[2]中描述的行状态方法完成.在此MIB中,为了配置一项功能,
   常常向一个表格中添加行.此配置常常包括控制此功能操作的参数.代理装置必须检测这
   些参数,以确定他们是否适合此MIB中定义的约束条件以及一些特殊约束情况例如缺少资
   源.代理装置将会不知所措,当它检测这些参数和当它发信号给管理中心说这些参量残缺
   的时候.以下由两个机会:


    o 当管理中心设置每一个参量对象时.


    o 当管理中心将行状态对象设为激活状态.

   如果选择后者,管理中心将搞不清楚参量中的那些是残缺的,并引起坏数据错误的发生.这
样,无论那种能的情况,实现程序将选择前者因为它可以向管理中心提供更多的信息.

   当管理中心在使用SNMP的时候尝试设置配置信息将会出现错误.当此包括在同样控制表
格中一个概念上的行的增加时,管理装置将出现互相抵制,尝试创立同一个实体.为了避免这
些抵制,每个控制实体包含一个用专用语法定义的状态实体,以便管理装置区别.在行增加机
制下进行创立一个已经存在的状态对象时,将返回一个错误.当多于一个管理装置同时尝试创
立同一个概念上的行时,只有第一个会成功.其余的将接收到错误.

   在RMON MIB [RFC 1757]中,提供了实体状态文本协议来避免此相互抵制状况.这样,此文
本协议增加到SNMP框架中.此行状态文本协议适用于所有新表格的定义.

   当一个管理装置要创立一个新的控制实体,它需要为那个行选择一个索引.这有很多避免
多个管理装置使用同一个索引的方法,如果一个索引没有被使用,上机制回避免冲突.配置的
方法包括任意选择和扫描控制表格寻找第一个空闲的索引.因为队列中被管理装置选择的索
引可能具有任意的值,管理装置必须可以用任意值的索引创建一个行,当它有创立一个新行的
资源时.
   
   此MIB中的一些表格设计其他的表格.当在这些表格中创立和删除实体时,通常允许互相
   参考.在此表格中创建或删除实体没有定义.

4.  协议

   以下协议适用于整个RMON MIB以及相关文档.

   好的信息包

   好的信息包使那些拥有一个有效的帧长度的无错误信息包.例如,以太网上,好的信
   息包是长度在64octers和1518octets之间的无错误信息包.他们的形式定义在IEEE
   802.3中3.2.all部分.

   坏的信息包

   坏的信息包是那些因固定取帧而被认为信息包的信息包,此信息包包含错误或长度
   无效.例如,以太网上,坏的信息包有一个有效的导言和SFD,但是有一个坏的CRC,
     或者长度小于64octets或长于1518octets.

5.  RMON 2 协议

   以下的实践和协议在RMON 2 MIB中定义.

5.1.  术语应用层的使用

   此MIB中由许多术语应用层被用来描述一系列协议或者一个功能的情况.此并不是特别
   意味着一个OSI第7层协议.更确切的,它为了定义一系列不包含在MAC层和网络层协议
   中的协议,但也可包含传送,会议,表示和应用层协议.

5.2. 协议目录和有限扩展

   每个RMON 2 执行有能力分析信息包的类型并在多个层中鉴别他们的协议类型.协议
   目录提供了一个协议类型的清单,检测器允许警示,增加,删除,以及此列中协议类型
   的配置.

   一个需要注意的概念:协议目录表格的"有限扩展".RNOM 2 模式指那些由静态软件
   在执行期间写下的协议.因此,作为结构的内容,一个执行没有立即学会分析一个新的
   信息包类型的功能.但是,一个执行可以写作:对一个特殊的协议软件知道到哪里获得
   多路分析技术,或是,下一个较高层的解码是驱动表格.当编码为适应它的目的编写并
   且可以延伸多于一个较高层的时候,上机制起作用.此延展性被称为"局限扩展"使其
   局限性更为明显.但是,这是一个非常有用的工具.
 


   例如,假设一个执行中有C编码使在几个以太网封装中的任一中都可以对IP信息包解
   码,或解释IP协议协议以便识别UDP信息包;或对UDP端口号进行解码.此执行也许是
   表格驱动的,以便于,多个可能的端口号中,设定161为SNMP,53为DNS,69为TFTP.协
   议目录表格的有限延展允许一个SNMP操作可以设定一个实体,其为UDP创立了一个
   附加的表格映射,且此UDP认定123端口为NTP并开始对此信息包进行计数.

   有限可延展性是这样的操作,一个执行可以选择是否允许具有子协议的任意协议.

5.3.  信息包中的错误

   在此MIB中,有链接错误的信息包在任何地方都不被计数,因为此MIB中大多数参量都
   要求信息包的容量的解码,但当出现链接错误时此译码是无意义的.

   具有已经侦察到的协议错误的协议包对有的协议都将计数,在碰到错误的层中.此含义
   是,此MIB中具有以察觉错误的信息包在网络层的任意地方都不被计数,当传输层中的具
   有已察觉错误的信息包也许具有网络层统计学计数.



6.  定义

RMON2-MIB 定义::==开始
输入
    模块特性,对象类型,32位计数器,整数32,
        规格32,Ip地址,时间计数       FROM SNMPv2-SMI
    文本协议,行状态,显示串,时间标记
                                                 FROM SNMPv2-TC
    模块顺从,对象组来自于SNMPv2-CONF
    mib-2, if索引                  FROM RFC1213-MIB
    业主串,统计学表,历史,主机,
    矩阵,过滤器,以太状态实体,历史控制实体,
    主机控制实体,矩阵控制实体,过滤器实体,
    信道实体                    FROM RMON-MIB
    令牌网,令牌网ML状态实体,令牌网PS状态实体,
    循环中控制实体,路由源泉状态实体
                                    FROM TOKEN-RING-RMON-MIB;
--  遥远网络警示 MIB

远程监控技术 模块特性
    上次更新  "9605270000Z"
    结构"IETF RMON MIB 工作组"
    联系信息
        "Steve Waldbusser   (WG 编者)
         Postal: International Network Services
         650 Castro Street, Suite 260
         Mountain View, CA 94041
         Phone:  +1 415 254 4251
         Email:  waldbusser@ins.com


         Andy Bierman   (WG 主席)
         Phone:  +1 805 648 2028
         Email:  abierman@west.net"
    描述
        "此 MIB 模式用于管理远程警示装置的操作.此模式
         扩展了原先在RFC 1756中描述的RMON MIB."
    ::= { mib-2 16 }


-- { 远程控制技术 1 } 到 { 远程控制技术 10 }定义在 RMON 中 和
-- 令牌网 RMON MIB [RFC 1513]

    协议索引          对象标示符        ::= { 远程控制技术 11 }
    协议目录          对象标示符        ::= { 远程控制技术  12 }
    地址映射          对象标示符        ::= { 远程控制技术  13 }
    nl主机            对象标示符        ::= { 远程控制技术  14 }
    nl矩阵            对象标示符        ::= { 远程控制技术 15 }
    al主机             对象标示符        ::= { 远程控制技术  16 }
    al矩阵            对象标示符        ::= { 远程控制技术  17 }
    用户纪录          对象标示符        ::= { 远程控制技术  18 }
    探测器配置        对象标示符        ::= { 远程控制技术  19 }
    远程控制技术一致   对象标示符        ::= {远程控制技术 20 }

-- 文本协议


基于零的32位计数器      ::= 文本协议
    状态    当前的
    描述
        "此TC描述了一个对象,它按照以下的定义对事件进行计数:此类型的
         对象在创立时将被设定为0并且在其后对适当的时间计数,当达到值
         2"32时返回0.

        假定一个应用程序发现新对象需要在最短的时间内将其封装,可使用
        最初的值作为标记,它最终可以指出此对象属于的表格.对一个管理

        中心来说,知道此最短时间和两次检测之间的实际时间是很重要的,
        而当实际时间很长或者没有定义最短时间时抛弃数据也是很重要的.

        特别的此 TC用于这样的表格:索引空间经常地改变和/或正使用时间
        过滤器机制.
    语法    标准32

上次设立时间::=文本协议
    状态   当前的
    描述
        "此TC描述一个对象,其实体在储存上次时间时创立.

        此可用于检测应用软件来确定一个实体已经被删除了且在检测中又被重新
        设定,引起数据中其他的不可检测中断."
    语法    时间标记

时间过滤器::==文本协议
    状态    当前的
    描述

        "对一个表格要被用于索引.允许一个应用程序去下载自从一个特殊的时间以
         来改变的那些行.如果此行中的任意对象的数据改变了或者行被删除或创立,
         我们认为行改变了.

        当系统更新时间被设定为0,此表格将为空.

        在过去的每个系统更新时间内一个实体都存在,除去整个表格被清除的情况.

        当基础行被更新时,新的概念上的行被创立(当将与其他所有的要求共享当前
        更新的对象值).系统更新时间的值决定了创立的请求的数目,在那时基础行被
        最后更新了.在行最后一次更新时,一个请求在每个系统更新时间都存在,对
        每个系统更新时间评估豆浆确立一个时间标记.一个新的概念上的行将与一个
        时间标记相联系,其在与概念上的行相联系的系统更新时间评估时被创立.

        在时间零点时或之后定义概念上的行更新,这样,至少在每个基本的行中至少
        存在一个一个概念上的行(与时间标记零相联系).

        此变量的深入讨论参阅附录.

        考虑以下的foo表格:

        foo表格 ...
        索引 { foo时间标记,foo索引 }

        Foo实体{
           foo时间标记    时间过滤器
           foo索引        整数,

           foo计数器      计数器
        }

        表格中需有两个基本的行(foo索引==1,foo索引==2),行1在第6个时间被最新
        更新,行2在第8时间被最新更新,在初期的几个场合例如当前的值分别为5和9,
        此两行都将更新.以下的foo计数器需要存在.

        foo计数器.0.1  5
        foo计数器.0.2  9
        foo计数器.1.1  5
        fooCounts.1.2  9
        foo计数器.2.1  5
        foo计数器.2.2  9
        foo计数器.3.1  5
        foo计数器.3.2  9
        foo计数器.4.1  5
        foo计数器.4.2  9
        foo计数器.5.1  5
        foo计数器.5.2  9
        foo计数器.6.1  5
        foo计数器.6.2  9
        foo计数器.7.2  9    -- 注意行1在时间7和8不存在
        foo计数器.8.2  9    
    语法        时间标记

数据源::=文本的协议
    状态     当前的
    描述
       “定义接收功能的数据的来源是具有分析的功能。在此设备上此
         源泉可以是任何的界面。  
        
         为了定义一个特定的界面，应界面的要求，此对象应当定义if索
         引对象的实例，定义在[3，5]中。

         例如，如果一个实体要截收从界面#1来的数据，此对象将被设定
         为if索引.1.“
    语法            对象定义
--
-- 协议目录组
--
-- 列举协议的详细的目录,监测器可以显示并允许增加,删除,以及此序列中实体的配
   置
协议目录最新改变        对象类型
    语法         时间标记
    最大通道     只读
    状态         当前的
    描述
        "协议目录最后被规范化的时候,系统更新时间的值,或者通过添加或删除
         或者通过协议目录地址映射配置的规范化功能,或者通过协议目录主机配
         置的或者协议目录矩阵配置的."
    ::= { 协议目录 1 }

协议目录表格        对象类型
    语法          协议目录实体
    最大通道      不可得
    状态            当前的
    描述
        "此表格列举了这个代理装置具有解码和计数的功能的协议.此表格中,对
         每个这样的协议都有一个实体.这些协议定义了不同的网络层,传输层,和
         高层协议.此代理装置应当基于此基础上：此表格预先配置了解和需求监
         视器的协议.我们很希望执行支持网络层(至少对描述组协议)以上的协议,
         至少对那些不支持应用层组的协议."
    ::= { 协议目录 2 }

协议目录实体       对象类型
    语法          协议目录实体
    最大通道       不可得
    状态         当前的
    描述

        "在协议目录表格中的一个概念上的行.

         此实体的索引的一个例子是协议目录地址索引8.0.0.0.1.0.0.8.0.2.0.0,
         它是一个长度为8,跟着8个 subid（对协议目录ID1。2048跟着一个长度为2和
         2个subid（对零值参量解码)解码）的解码.
    索引{ 协议目录ID，协议目录参量}
    ::= {协议目录表格 1 }

协议目录实体：:= 整数{
    协议目录ID                   八进制字符串,
    协议目录参量                 八进制字符串,
    协议目录本地索引              整数32,
    协议目录描述                 显示字符串,
    协议目录类型                 比特,
    协议目录地址映射配置          整数，
    协议目录主机配置             整数，
    协议目录矩阵配置             整数，

    协议目录业主                 业主字符串，
    协议目录状态                 行状态
}

协议目录ID         对象类型
    语法       八进制字符串
    最大通道    不可得
    状态          当前的
    描述
        "为一个特定的协议作的一个特定的定义.标准定义按照这样的一个风格:
         例如他们不能经常被用作对新协议的详细说明.一个树型结构配置符合
         协议封装"树"并且对某些子树具有计算作业配置.更多的资料参阅 RFC
         XXX.

        除了计算配置,此探测器仅仅将实体安置在这里为那些他选择搜集的协议.
        换句话说,他没有必要给这个表格配置所有可能的以太网协议类型,当它看
        到他们的时候也没有必要随时创立他们.它是否做这些事情是产生定义(花
        费/利益,可用性)的工作,并由此产生的设计者决定.


        如果一个实体被写入此表格,它具有一个代理装置不了解的协议目录ID，直
        接的或者算法上的，SET要求拒收并产生一个不连续名或者错误数据（对SNMPv1）
        的错误."
    ::= {协议目录实体1 }

协议目录参量        对象类型
    语法            八进制字符串
    最大输入         不可得
    状态             当前的
    描述
        "相关联的协议目录ID的一套参数.可能参数的描述参阅相关的RMN2
                协议标示符文件.对此协议目录ID中的每一个潜在的标示符,其中有一
         个8位比特的字符串,且在此协议目录中,参数出现的顺序和可能的潜在
         标示符出现的顺序一致.

        此协议目录ID树的每一个节点有一套不同的,可选择的参数(即,对节点
        参数的定义是随意的).对每个节点适当的参数值包括在此字符串中.注
        意,此字符串中的对每个节点的参数的包含物不是随意的-随意指一个节
        点可能没有参数定义,在此情况下此节点的参数域将是零."
    ::= { 协议目录实体 2 }

协议目录局部索引      目标类型

    语法          整数32 (1..2147483647)
    最大输入      只读
    状态          当前的
    描述
        "与协议目录实体相关联的局部专断的,唯一的表示符.


         对每一个被支持协议的值必须保持不变,至少从一个网络管理装置的重新
         初始化到下一个重新初始化,除非如果一个协议被删除并且被重新设立,
         它必须被设定为从上一次初始化以来没有被使用的一个新的值.

        只有在一个被给出的SNMP实体中此特殊的值才意味深长.一个协议目录局
        部索引不能被重新使用,只有到在此事件协议目录实体中下一个代理重起被
        取消时."
    ::= { 协议目录实体 3 }

协议目录说明     对象类型
    语法        显示字符串(大小 (1..64))
    组擦输入     创立读
    状态        当前的

    描述
        "协议封装的一个文本的描述.协议可以选择描述实体封装(例如,
         仅仅最高层)的一个子集.

         此对象被设定为仅供人使用.

        当关联的协议目录状态对象为激活(1),此对象不可以被修改."
    ::= { 协议目录实体 4 }

协议目录类型     对象类型
    语法         比特{
                    可扩展的(0),
                    可地址识别(1)
                }
    最大输入    只读
    状态        当前的
    描述
        "此对象描述了此协议目录实体的两个属性.

         此扩展位的存在与否描述了协议目录实体是否是由用户通过创立协议目录
         实体(属于协议)可扩展的.


         一个允许可延展型的实体的例子是ip.udp.协议可以自动的形成此节点的一些
         子协议例如`ip.udp.snmp'和`ip.udp.dns'.一个协议管理员或者用户也可

         以设定额外的子协议通过遥远的SNMP要求(在此表格中创立实体).当创立
         一个协议以前没有的新子节点,延伸一个父节点(此协议还没有设立),此子
         节点是不可延伸的.此条款限制了可延展性.

         当通过此延展性增加一个子节点,协议目录局部索引和协议目录类型的值将
         会被代理装置赋值.

         此协议中的其他对象将会由创立新实体的管理员赋值.

         此对象也可以描述代理装置是否可以辨识此协议的地址,或是一个网络层协
         议.即,当一个协议可以辨识一个特殊的网络层协议的信息包并对它们计数,
         它逻辑上会注意辨识此协议中的地址并用它们创立网络层或应用层表格.如
         果此位被设定,通过这些协议代理装置可以辨识网络层和应用层主机和矩阵
         表格.

         注意,当一个实体创立了,代理装置将承认此协议以支持此代理装置能力的位
         的值.注意,因为行的创立经常考验受限延展性的特性,这些位经常被设为零."

    ::= { 协议目录实体5 }

协议目录地址映射配置         对象类型
    语法           整数{
                    不被支持(1),
                    支持关(2),
                    支持开(3)
                }
    最大输入      创立读
    状态          当前的
    描述
        "此对象描述并配置了协议的对起检测器地址映射的支持.当检测器在此表格
         中为所有他支持的协议创立实体时,他将设立此实体为不支持(1),如果他不
         能实现此协议的地址映射或此协议不是网络层协议.当一个管理操作在此表
         格中创立一个实体作为此受限延展特性的一部分时,检测器必须将此值设为
         不支持(1),因为此协议目录表格的受限延展性不会扩展功能去解释此延展
         协议的地址.

        如果此对象的值是不支持(1),检测器将对协议不履行地址映射并不允许此对
        象被改称其他值.如果此对象的值是支持开(3),检测器支持对协议的地址映射,
        并且被配置为对所有地址映射控制实体和界面对协议都履行地址映射.
        如果此对象的值为支持关(2),检测器支持对协议的地址映射,但是被配置成对
        任何地址映射控制实体和界面对此协议不履行地址映射.不论何时此值由支持开
        (3)变成支持关(2),检测器将删除地址映射表格中所有相关的实体."
    ::= { 协议目录实体 6 }


协议目录主机配置      对象类型

    语法           整数{
                    不支持(1),
                    支持关(2),
                    支持开(3)
                }
    最大输入       创立读
    状态           当前的
    描述
        "此对象描述配置检测器的对网络层以及此协议应用层主机表格的支持.当
         检测器在此表格中为他所支持的所有协议创立实体时,他将实体设为不支
         持(1),如果它不能追踪此协议的nl主机表格或者虽然al主机表格正在被操
         作但是不能追踪此协仪.注意,如果al主机表格正被操作,检测器只能支持
         一个同时被nl主机表格和al主机表格支持的协议.
        如果关联的协议目录类型对象设立了地址辨识位,将出现一个网络层协议以便
        检测器辨识地址,这样检测器将用其发现的此协议的地址实现nl主机表格和al主
        机表格.

        如果此对象的值为不支持(1),检测器对此协议将不追踪nl主机表格和al主机表格,
        也不允许此值被更改.如果此值为支持开(3),检测器对此协议支持追踪nl主机表格
        和al主机表格并被配置为对所有控制实体和协议对此协议都支持追踪这两个表格.
        当此对象的值为支持关(2),检测器对此协议支持追踪nl主机表格和al主机表格但
是被配置为对任何控制实体或界面都不支持对此二表格追踪.不论何时此值由支持
开(3)变成支持关(2),检测器将删除地址映射表格中所有相关的实体."


        注意因为每个al主机实体涉及两个协议目录实体,一个对应网络地址另一个对应最
高层辨识的协议的类型,当对两个协议此值都为支持开(3)时,才在此表格中创立一
个实体." ::= { 协议目录实体 7 }

协议目录矩阵配置    对象类型
    语法           整数{
                    不支持(1),
                    支持关(2),
                    支持开(3)
                }

    最大输入       创立读
    状态           当前的
    描述
        "此对象描述并配置了此检测器对此协议网络层和应用层矩阵表格的支持.当
         检测器在此表格中为他所支持的所有协议创立实体时,他将实体设为不支
         持(1),如果它不能追踪此协议的nl矩阵表格或者虽然al矩阵表格正在被操
         作但是不能追踪此协仪.注意,如果al矩阵表格正被操作,检测器只能支持
         一个同时被nl矩阵表格和al矩阵表格支持的协议.

        如果关联的协议目录类型对象设立了地址辨识位,将出现一个网络层协议以便
        检测器辨识地址,这样检测器将用其发现的此协议的地址实现nl矩阵表格和al矩
        阵表格.

        如果此对象的值为不支持(1),检测器对此协议将不追踪nl矩阵表格和al矩阵表格,
        也不允许此值被更改.如果此值为支持开(3),检测器对此协议支持追踪nl矩阵表格
        和al矩阵表格并被配置为对所有控制实体和协议对此协议都支持追踪这两个表格.
        当此对象的值为支持关(2),检测器对此协议支持追踪nl矩阵表格和al矩阵表格但
是
        被配置为对任何控制实体或界面都不支持对此二表格追踪.不论何时此值由支持开
        (3)变成支持关(2),检测器将删除nl矩阵表格和al矩阵表格中所有相关的实体."

        注意因为每个al矩阵实体涉及两个协议目录实体,一个对应网络地址另一个对应最
高层辨识的协议的类型,当对两个协议此值都为支持开(3)时,才在此表格中创立一
个实体."
   ::= { 协议目录实体 8 }

协议目录业主    对象类型
    语法           业主字符串
    最大输入       创立读
    状态           当前的
    描述
        "配置访问的实体并使用配置给它的资源."

    ::= { 协议目录实体 9 }

协议目录状态    对象类型
    语法           行状态
    最大输入       创立读
    状态           当前的
    描述
        "协议目录实体的状态."

        一个实体也许并不处于激活状态只到此实体中的所有对象都具有一个合适的值。
        如果此对象不等于激活(1),所有关联的nl主机表格，nl矩阵SD表格，nl矩阵
        DS表格，al主机表格,al矩阵SD表格和al矩阵DS表格中的对象将被删除."
    ::= { 协议目录实体10 }

--
-- 协议描述组 (协议目录)
--
--为在网络段上出错误的不同的协议搜集相关的八进制字节和信息包.

--    协议目录控制表格,

--    协议表格状态表格

协议表格控制表格          对象类型
    语法           协议表格控制实体序列
    最大输入       不可得
    状态           当前的
    描述
        "控制协议类型分配标准表格的创立。


        执行倾向于给每个监控界面增加一个实体在初始化时，则对标准协议的错误
        搜集是可得的.

        三段论:
        此表格控制发生在给定的界面上的任意个或全部错误的基础标准协议的搜集.
        一个NMS可以应用这个表格来很快的决定由不同的协议分配的极限带宽.

        一个媒体标准的搜集也可以为同一界面被配置(例如,以太状态,trP状态）简单地包
含总体
        框架，八位字节和有缺陷的事件."
    ::= { 协议分类 1 }

协议分类控制实体     对象类型
    语法           协议分类控制实体
    最大输入       不可得

    状态           当前的
    描述
       "协议分类控制表格中的一个概念上的行.

         此实体的索引的一个例子是协议分类控制丢失帧.7"
    索引{协议分类控制索引}
    ::= { 协议分类控制表格 1}

协议分类控制实体::=整数{
    协议分类控制索引                整数32,
    协议分类控制数据源              数据源,
    协议分类控制丢失帧              32位计数器,
    协议分类控制创立时间            最后创立时间,
    协议分类控制业主                业主字符串,
    协议分类控制状态                 行状态
}

协议分类控制索引       对象类型
    语法           32位整数(1..65535)
    最大输入       不可得
    状态           当前的
    描述
      "一个对协议分类控制实体的独特的索引."
    ::= { 协议分类控制实体1 }


协议分类控制数据源   对象类型
    语法           数据源
    最大输入       创立读
    状态           当前的
    描述
        "此协议描述的数据源.

        此组中的统计学表格反映了局域网系统中所有影响定义的界面的信息
        包.


        如果协议分类控制状态对象等于激活的（1），此对象也许不会被初始化"
    ::= { 协议分类控制实体 2 }

协议分类控制丢失帧       对象类型
    语法           32位计数器
    最大输入       只读
    状态           当前的
    描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.
        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 协议分类控制实体3 }

协议分类控制创立时间  对象类型
    语法           上次创立时间
    最大输入       只读
    状态           当前的
    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重
         新创立."
    ::= { 协议分类控制实体4 }


协议分类控制业主        对象类型
    语法           业主字符串
    最大输入       创立读
    状态           当前的
    描述
        "配置入口的实体并使用分配给它的资源."
    ::= { 协议分类控制实体 5 }

协议分类控制状态   对象类型
    语法           行状态
    最大输入       创立读
    状态           当前的
    描述
        "此行的状态.

        一个入口没有处于激活状态除非此实体中的所有的对象

        有合适的值.

        如果此对象不等于激活的(1),在此协议分类状态表格中的相关的实体
        将会被删除."
    ::= { 协议分类控制实体 6 }

-- 每个界面协议描述的统计学表格
协议分类状态表格  对象类型
    语法           协议分类状态实体序列
    最大输入       不可得
    状态           当前的
    描述
        "创立在此表各中的为每个协议的实体,此协议在至少一个信息包中存在的协议
         分类表格中.对每个协议类型,此表格中的计数器将被更新.每当分析一个信息
        包时,协议类型将被计数,但是对发生MAC层错误的信息包计数器不会被更新。

        注意如果一个协议实体被删除了，在此表格中的所有相关的实体将被删除."
    ::= { 协议分类 2 }

协议分类状态实体    对象类型
    语法           协议分类状态实体
    最大输入       不可得
    状态           当前的
    描述
        "在协议分类状态表格中一个概念上的行.

        此索引由相关协议分类控制实体的协议分类控制索引构成,协议分类控制
        实体由此实体提供的相关的协议的协议局部索引跟随.换句话说,
        此索引定义了分配实体的协议也定义了他多提供的特殊协议.

        此实体索引的一个例子见协议分配状态Pkts.1.18"
    索引{ 协议分类控制索引,协议目录局部索引 }
    ::= { 协议分类状态表格1 }

协议分类状态实体::=整数{
    协议分类状态Pkts                    32位零基础计数器,
    协议分类状态八位字符串               32位零基础计数器
}

协议分类状态Pkts   对象类型
    语法           32位零基础计数器
    最大输入        只读
    状态            当前的
    描述

        "此协议类型的接收到的无错误的信息包的数目.注意,此为连路层信息包
         的数目,这样如果一个单独的网络层信息包被分为几个链路层帧,此计数器
         被增加几次."
    ::= { 协议分类状态实体 1 }

协议分类状态八进值字符串           对象类型
    语法           32位零基础计数器
    最大输入        只读
    状态            当前的
    描述
    
        "自从八进制字符串被增加到协议分类状态表格(不包括帧位但包括
         FCS八进制字符串）接收到的信息包中的八进制字符串数目，除去
         含有错误的.

        注意,对特殊协议帧中的八进制字符串不计数,但是对包含此协议的
        整个信息包计数."

    ::= { 协议分类状态实体2 }

--
-- 地址映射组   (地址映射)
--
-- 为由监测器发现的网络地址捆绑列举MAC地址和他们最后出现的界面。
--    地址映射控制表格

--    地址映射表格

地址映射添加   对象类型
    语法           32位计数器
    最大输入        只读
    状态            当前的
    描述
        "一个地址映射实体被添加到地址映射表格中的次数。如果一个实体被添
         加了，然后删除，然后又添加，此计数器将以2为单位增加。

        注意，可以通过减少从地址映射添加中的地址映射删除来决定表格的大小."
    ::= { 地址映射 1 }

地址映射删除    对象类型
    语法           32位计数器
    最大输入        只读
    状态            当前的
    描述
        "一个地址映射从地址映射表格中删除(以某种原因)的次数.如果一个实体
         被删除了,然后添加,然后又删除,此计数器将以2为单位增加.

        注意，可以通过减少从地址映射添加中的地址映射删除来决定表格的大小."
    ::= { 地址映射 2 }

地址映射最大希求实体     对象类型
    语法           32位整数(-1..2147483647)
    最大输入        读写
    状态            当前的
    描述
        "在此地址映射表格中希求的实体的最大数目.监测器不会在表格中创建多于
         此数目的实体,但是可以选择在此表格中创立较少的实体以任何原因包括资
         源的缺少.

        如果此对象被设定为少于当前实体数目的一个值,在一个依赖执行的习惯中
        将选择并删除足够的实体,以使表格中的数目等于此对象的值.

        如果此值被设位-1,监测器在此表格中可创立任意数目的实体.

        此对象可以用于控制在监测器上为不同RMON功能分配多少资源。“
    ::= { 地址映射 3 }

地址映射控制表格    对象类型

    语法           地址映射控制实体序列
    最大输入       不可得 
    状态            当前的
    描述
        "控制搜集网络层地址的表格，用来进行物理层到界面的映射。

        注意，这不像典型的RMON控制表格和数据表格，在其中每一个实体创立

        它本身的数据表格。此表格中的每一个实体可实现发现一个新界面上的地
        址并且到中心地址映射表格的放置。

        我们希望给予初始化时执行在每个监测界面增加一个实体，这样对地址映
        射错误的搜集便可得了。"
    ::= { 地址映射 4 }

地址映射控制实体       对象类型
    语法           地址映射控制实体
    最大输入       不可得 
    状态            当前的

    描述

        "地址映射控制表格中一个概念上的行。
        此实体索引得一个例子是地址映射控制丢失帧.1"
    索引{地址映射控制索引}
    ::= { 地址映射控制表格 1 }

地址映射控制实体::=整数{
    地址映射控制索引               32位整数
    地址映射控制数据源              数据源
    a地址映射控制丢失帧            32位计数器
    地址映射控制业主               业主字符串
    地址映射控制状态                行状态
}

地址映射控制索引        对象类型
    语法           32位整数(1..65535)
    最大输入        不可得
    状态            当前的
    描述
        "对此实体的一个独特的索引在地址映射控制表格中。“
    ::= { 地址映射控制实体 1 }

地址映射控制数据源       对象类型
    语法           数据源
    最大输入       创立读
    状态            当前的
    描述
        "对此地址映射控制实体的数据源。“
    ::= { 地址映射控制实体 2 }

地址映射控制丢失帧      对象类型
    语法           32位计数器
    最大输入       只读
    状态            当前的
    描述

       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.

        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 地址映射控制实体 3 }

地址映射控制业主       对象类型
    语法           业主字符串
    最大输入       创立读
    状态           当前的
    描述

        "配置入口的实体并使用分配给它的资源。“
    ::= { 地址映射实体 4 }

地址映射控制状态   对象类型
    语法           行状态
    最大输入       创立读
    状态           当前的
    描述
        "此地址映射控制的状态.

        一个入口没有处于激活状态除非此实体中的所有的对象
        有合适的值.

        如果此对象不等于激活的(1),在此地址映射表格中的相关的实体

        将会被删除."
    ::= { 地址映射控制实体 5 }

       

地址映射表格        对象类型
    语法           地址映射实体序列
    最大输入       不可得
    状态           当前的
    描述
        "为界面映射设定的从网络层到物理层的表格。

         监测器将向基于MAC资源和出现在无MAC层错误的信息包中得网络地址
         的表格增加实体。监测器将使此表格对所有在此协议目录种的协议都适
         用，表格中协议目录地址映射配置的值等于支持开（3），并删除任何实
         体当他们的协议目录实体被删除或者为支持关（2）。“
    ::= { 地址映射 5 }

地址映射实体        对象类型
    语法           地址映射实体
    最大输入       不可得
    状态           当前的

    描述
        "地址映射表格中一个概念上的行。此索引中得协议目录索引表明了网络层

         地址映射网络工作地址的协议。
        此实体的索引一个例子为地址映射源783495.18.4.128.2.6.6.
        11.1.3.6.1.2.1.2.2.1.1.1"
    索引 { 地址映射时间标记, 协议目录局部索引，
           地址映射网络工作地址，地址映射源 }
    ::= { 地址映射表格 1 }

地址映射实体：：=整数{
    地址映射时间标记                 时间过滤器
    地址映射网络工作地址              八进值字符串
    地址映射源                       八进值标示符
    地址映射物理地址                  八进制字符串
    地址映射上次变化                  时间标记
}

地址映射时间标记        对象类型
    语法           时间过滤器
    最大输入       不可得
    状态           当前的
    描述
        "此实体的一个时间过滤器。了解工作的机理参阅时间过滤
         器文本协定。“
    ::= { 地址映射实体 1 }

地址映射网络工作地址       对象类型
    语法           八进制字符串
    最大输入       不可得
    状态           当前的
    描述

        "此联系的网络工作地址。

        它作为一个八进制字符串提出，它具有特殊的规范和长度，
        长度由索引的协议目录局部索引命令决定。


        例如，如果协议目录局部索引提出一个Ip的封装，此对象被
        编码成4个八进制字符串，跟着4个八进制字符串得ip地址，
        按照网络工作比特顺序。“
    ::= { 制止映射实体 2 }

地址映射源      对象类型
    语法           对象标示符
    最大输入       不可得
    状态           当前的
    描述

        "与网络工作地址相联系的界面或者端口经常可以被看到。

        如果此地址映射在一个界面上被发现，此对象将为希求的界面辨
        识if索引对象的实例，定义在[3，5]中。例如，如果一个实体将要
        从界面#1上接收数据，此对象将被设定为if索引。1。

        如果此地址映射在一个端口上被发现，此对象将为希求的端口辨
        识rptr组端口索引对象的实例，定义在[RFC1516]中，例如，如果
        一个实体将从组#1，端口#1，上接收数据，此对象将被设为rptr组
        端口索引.1.1。

        注意,与此实体相联系的数据源可以唯一指向索引对象,此对象可能
        不时的指向重复的端口对象.当数据源指向一个界面,它被局部的受
        影响的重复并且代理装置有重要的信息关于在那个重复上出现的传
        输的信息端口."
    ::= { 地址映射实体 3 }

地址映射物理地址       对象类型
    语法           八进制字符串
    最大输入       只读
    状态           当前的

    描述
        "最新的物理地址源，相关的网络工作地址基于其上。如果相关网络地址的
         协议被封装到网络层或较高的协议中， 此将会下一个较低的协议的地址，
         此协议具有地址可重新配置位，并为协议严格格式化。"
    ::= { 地址映射实体 4 }

地址映射最新变化       对象类型
     语法         时间标记
    最大输入       只读

    状态           当前的
    描述
        "实体最后被创立或者物理地址变化时系统更新时间的值。

        此可用来处理复制地址的问题，在这用情况下，此对象将被
        随时更新。“
    ::= { 地址映射实体 5 }

--
-- 网络层主机组
--
-- 对由监测器发现的从一个网络工作地址到另一个的传输的总数进行计数。
-- 注意，hl主机控制表格也具有对象，可控制一个理论上的al主机表格，al表格的执行
-- 并不要求在此组中完全贯彻。


hl主机控制表格    对象类型
     语法         hl主机控制实体序列
    最大输入      不可得
    状态           当前的
    描述
        "较高层（例如，无-MAC）主机表格控制实体的列表。

        这些实体将实现网络工作的搜集以及由网络工作地址索引的应用层主机表
        格。网络工作和应用层主机表格都由此表格控制，则它们将同时被创立和
        删除，更进一步的，他们可作为单独的数据堆栈被执行（注意如果一个执
        行存储应用层主机历史纪录，它可以从它们导出网络工作层主机纪录）。


        nl主机表格中得实体将在此表格中实体行动时被创立。特别的，如果此监
        测器执行al主机表格，此al主机表格中的实体将在每个表格实体行动时被
        创立。

        我们希望执行基于初始化在每个界面监测时增加一个实体，这样，主机统
        计学表格的错误搜集时可得的。"
    ::= { nl主机 1 }

hl主机控制实体    对象类型
     语法         hl主机控制实体
    最大输入      不可得

    状态           当前的
    描述
        "hl主机控制表格中一个概念上的行。

        此实体的索引的一个例子是hl主机控制NID丢失帧。1“

    索引 { hl主机控制索引 }
    ::= { hl主机控制表格 1 }

Hl主机控制实体：：=序列 {
    hl主机控制索引         32位整数，
    hl主机控制数据源       数据源，
    hl主机控制Nl丢失帧             32位整数,
    hl主机控制Nl增加               32位整数,
    hl主机控制Nl删除               32位整数,
    hl主机控制Nl最大有缺陷实体     32位整数,
    hl主机控制Al丢失帧             32位整数,
    hl主机控制Al增加              32位整数,

    hl主机控制Al删除              32位整数,
    hl主机控制Al最大有缺陷实体    32位整数,

    hl主机控制业主                业主字符串
    hl主机控制状态                行状态
}

hl主机控制索引    对象类型
    语法         32位整数(1...65535)
    最大输入      不可得
    状态           当前的
    描述
        "单独描述hl主机控制表格中实体的一个索引.每个这样的实体
         定义一个这样的功能:通过此hl主机控制实体的行为随意的,
         在一个普通的界面上发现主机并在nl主机表格中安置关于它
         们的统计学表格."
    ::= { hl主机控制实体 1 }

hl主机控制数据源    对象类型
    语法         数据源
    最大输入      创立读
    状态           当前的
    描述
        "为相关的主机表格提供的数据源.

         此组中的统计学表格对多有影响描述界面的局部网络工作段
         的信息包都有影响.

         如果相关的hl主机控制状态对象等于激活的(1),此对象不会被
         初始化."
    ::= { hl主机控制实体 2 }

hl主机控制NL丢失帧   对象类型
    语法         32位计数器
    最大输入      只读
    状态           当前的
    描述
       "被检测器接收到的因而没有在*状态丢失事件中计数的帧的总数,但是因为
        这样检测器选择在任何情况下对相关的hl主机实体不计数.经常此情况发生

        在当检测器用尽资源并决定不再搜集时.计数不包括那些因为MAC层错误而不被计
数的信息包.

        注意,如果nl主机表格因为在协议目录中没有支持的协议而处于没有激活状态
        时此值将为零.

        注意,不想丢失事件计数器,此数恰为丢失帧的数目."
    ::= { hl主机控制实体 3 }

hl主机控制NL增加   对象类型
    语法         32位计数器
    最大输入      只读
    状态           当前的
    描述
        "一个nl主机被增加到nl主机表格中的次数.如果一个主机被增加了,然后删除,
         又被增加,计数器将以2为单位增加.

        为了允许有效的执行,代理装置可能在很短的时间短内推迟更新此对象.例如
        一个执行策略可能允许因特网的数据类型在短时间内区别与那些明显经过SNMP
              的.计数器可能在那些较短时间内影响因特网数据类型.
 
        注意,此表格的大小可通过在hl主机控制NL增加中减去hl主机控制NL删除来

        决定."
    ::= { hl主机控制实体 4 }

hl主机控制NL删除   对象类型
    语法         32位计数器
    最大输入      只读
    状态           当前的
    描述
        "一个nl主机被nl主机表格中删除(以任何原因)的次数.如果一个主机被删除了,
         然后添加,又被删除,计数器将以2为单位增加.

        为了允许有效的执行,代理装置可能在很短的时间短内推迟更新此对象.例如
        一个执行策略可能允许因特网的数据类型在短时间内区别与那些明显经过SNMP
              的.计数器可能在那些较短时间内影响因特网数据类型.
 

        注意,此表格的大小可通过在hl主机控制NL增加中减去hl主机控制NL删除来
        决定."
    ::= { hl主机控制实体 5 }

hl主机控制NL最大希求实体   对象类型
    语法         32位整数(-1..2147483647)
    最大输入      创立读
    状态           当前的
    描述
        "控制实体起作用时在nl主机表格中希求的最大数目的实体.检测器不会在表
         格中创立多余此数目的相关实体,但是可以选择以包括资源缺少在内的任何
         原因在此表格中创立少于此数目的实体.

         如果此实体被设定位少于当前实体的数目的数字,足够的实体在依赖执行的

         管理器中被选择并被删除,这样表格中实体的数目将等于此对象的值.


         如果此值被设为-1,检测器将对此表格中的实体进行计数.如果相关的hl主机
         控制状态对象等于激活,此对象将不会被格式化.

        此对象可以用来控制在检测器上分配多少资源给各种RMON功能.'
    ::= { hl主机控制实体 6 }

hl主机控制AL丢失帧   对象类型
    语法         32位计数器
    最大输入      只读
    状态           当前的
    描述
       "被检测器接收到的因而没有在*状态丢失事件中被计数的帧的总数,但是对它
        们检测器选择可以任何原因对相关的al主机实体不计数.经常的,此事件发生
        在检测器资源短缺并断开搜集时.

        此数目不包括因含有MAC层错误而没被计数的信息包的数目.

        注意,如果al主机表格没有被执行或因为协议目录中无何时协议处于停滞
        状态,此值将为0.

        注意,不像丢失事件计数器,此值恰为丢失帧的数目."
    ::= { hl主机控制实体 7 }


hl主机控制AL增加   对象类型
    语法         32位计数器
    最大输入      只读
    状态           当前的
    描述
        "一个nl主机被增加到al主机表格中的次数.如果一个主机被增加了,然后删除,
         又被增加,计数器将以2为单位增加.

        为了允许有效的执行,代理装置可能在很短的时间短内推迟更新此对象.例如
        一个执行策略可能允许因特网的数据类型在短时间内区别与那些明显经过SNMP
              的.计数器可能在那些较短时间内影响因特网数据类型.
 
        注意,此表格的大小可通过在hl主机增加中减去hl主机控制AL删除来
        决定."
    ::= { hl主机控制实体 8 }

        

hl主机控制AL删除   对象类型
    语法         32位计数器
    最大输入      只读
    状态           当前的
    描述
        "一个al主机被nl主机表格中删除(以任何原因)的次数.如果一个主机被删除了,
         然后添加,又被删除,计数器将以2为单位增加.


        为了允许有效的执行,代理装置可能在很短的时间短内推迟更新此对象.例如
        一个执行策略可能允许因特网的数据类型在短时间内区别与那些明显经过SNMP
              的.计数器可能在那些较短时间内影响因特网数据类型.
 
        注意,此表格的大小可通过在hl主机控制AL增加中减去hl主机控制AL删除来
        决定."

    ::= { hl主机控制实体 9 }

hl主机控制AL最大希求实体   对象类型
    语法         32位整数(-1..2147483647)
    最大输入      创立读
    状态           当前的
    描述
        "控制实体起作用时在nl主机表格中希求的最大数目的实体.检测器不会在表
         格中创立多余此数目的相关实体,但是可以选择以包括资源缺少在内的任何
         原因在此表格中创立少于此数目的实体.


         如果此实体被设定位少于当前实体的数目的数字,足够的实体在依赖执行的
         管理器中被选择并被删除,这样表格中实体的数目将等于此对象的值.

         如果此值被设为-1,检测器将对此表格中的实体进行计数.如果相关的hl主机
         控制状态对象等于激活,此对象将不会被格式化.

        此对象可以用来控制在检测器上分配多少资源给各种RMON功能.'
    ::= { hl主机控制实体 10 }

hl主机控制业主   对象类型
    语法         业主字符串
    最大输入      创立读

    状态           当前的
    描述
        "配置入口的实体因此使用分配给它的资源."
    ::= { hl主机控制实体 11 }

hl主机控制状态   对象类型
    语法        行状态
    最大输入      创立读
    状态           当前的

    描述
        "此hl主机控制实体的状态.
         
         一个实体不会处于激活状态除非其中所有的对象都具有合适的值.

         如果此对象不等于激活(1),所有nl主机表格和al主机表格中的相关
         实体将被删除."

    ::= { hl主机控制实体 12 }

hl主机表格     对象类型
    语法       NL主机实体序列
    最大输入     不可得
    状态           当前的
    描述
        "此设备的界面上发现的一个特殊网络层地址的统计学表格的搜集.


         检测器为协议表格中协议目录主机配置值等于支持开(3)的所有网络
         层协议设置此表格,并删除协议目录实体被删除或其协议目录主机配
         置值为支持关(2)的任意实体.

         检测器将会把无MAC错误的所有信息包的源或目的地址填入此表格中.
         并在表格中为所有无MAC错误信息包添加八进制字符串和信息包数目."
::= { nl主机 2 }

hl主机实体     对象类型
    语法       NL主机实体
    最大输入     不可得
    状态           当前的
    描述
        "nl主机表格中一个概念上的行.

         索引中hl主机控制索引的值描述了实体创立时hl主机控制实体.索引中
         协议目录局部索引的值描述了nl主机地址网络层协议.

         此实体索引的一个例子是hl主机输出Pkt.1.783495.18.4.128.2.6.6."
    索引 { hl主机控制索引,nl主机时间标记,协仪目录局部索引,nl主机地址 }

    ::= { nl主机表格 1 }

Nl主机实体::=   序列 {
    nl主机时间标记               时间过滤器
    nl主机地址                   八进制字符串
    nl主机输入Pkts               基于零的32位计数器,

    nl主机输出Pkts               基于零的32位计数器,
    nl主机输入八进制字符串        基于零的32位计数器,
    nl主机输出八进制字符串        基于零的32位计数器,
    nl主机输出Mac无UnicastPkts  基于零的32位计数器,
    nl主机创立时间              最新创立时间
}

hl主机时间标记    对象类型
    语法       时间过滤器
    最大输入     不可得
    状态           当前的
    描述
        "此实体的一个时间过滤器.了解其工作方式参阅时间过滤
         器文本协定."
    ::= { nl主机实体 1 }


hl主机地址     对象类型
    语法       八进制字符串
    最大输入     不可得
    状态           当前的
    描述
        "此nl主机实体的网络地址.

        他以一个八进制字符串的并具有特殊的语义和由此索引的协议目
        录局部索引成分描述的长度的形式被给出.

        例如,如果洗衣目录局部索引显示ip的一个封装,此对象按照网络
        比特顺序被编码成长度为4个八进制字符串,跟着4个八进制字符
        串(ip地址)."
    ::= { nl主机实体 2 }

nl主机输入Pkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "被传输到此地址的无错的信息包的数目,自从它被加入到nl主机目录以来.
         注意,此为链路层信息包的数目,所以如果一个单独的网络层信息包被加入
         到几个链路层帧中,计数器将工作好几次."
    ::= { nl主机实体 3 }

nl主机输出Pkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "被传输到此地址的无错的信息包的数目,自从它被加入到nl主机目录以来.
         注意,此为链路层信息包的数目,所以如果一个单独的网络层信息包被加入
         到几个链路层帧中,计数器将工作好几次."
    ::= { nl主机实体 4 }


nl主机输入八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述
        "被传输到此地址的八进制字符串的数目,自从它被加入到nl
               主机表格中(包括帧比特不包括FCS八进制字符串),包括含
         有错误的信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."
    ::= { nl主机实体 5 }

nl主机输出八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述
        "由此地址传输出的八进制字符串的数目,自从它被加入到nl
               主机表格中(包括帧比特不包括FCS八进制字符串),包括含
         有错误的信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."
    ::= { nl主机实体 6 }

nl主机输出Mac无UnicastPkts   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述

        "由此地址传输出的无措的信息包的数目,自从主机被加入到nl主机表格
         中以来它被导向任何MAC广播地址或任何MAC多重地址.注意,此为链
         路层信息包的数目,所以,如果一个单独的网络层信息包被分解为几个链
         路层帧,此计数器增加几次."
    ::= { nl主机实体 7 }

nl主机创立时间          对象类型
    语法                最新更新时间
    最大输入             只读
    状态                当前的
    描述
        "当实体被最新激活时系统更新时间的的值,此可被管理中心使用来确定实体
         没有被删除并在两次检测之间被重新创立."
    ::= { nl主机实体 8 }

--
-- 网络层矩阵组
--
-- 对由检测器发现的每对网络层地址间的交通量进行计数.
-- 注意当hl矩阵控制表格也具有控制随意al矩阵表格的对象时,al矩阵表格的执
   行没有必要执行此组.
-- al矩阵表格不要求完全执行此组.

hl矩阵控制表格          对象类型
    语法                HL矩阵控制实体序列
    最大输入            不可得
    状态                当前的
    描述
        "较高层(例如,无MAC)矩阵控制实体的一个序列.

         这些实体可以完成含有交流统计学表格的网络层和应用层矩阵表格,
         它们由成对的网络地址索引.网络层和应用层矩阵表格都由此表格控
         制,所以它们同时被创立或是删除,更深入的,它们可以被作为一个单
         独的数据堆栈被执行(注意,如果一个执行将应用层矩阵内容存储到内
         存中,它可以根据此创立网络层矩阵内容.)

         nl矩阵SD表格和nl矩阵DS表格中的实体将由词表格中的每个实体来创
         立.另外,如果此检测器执行al矩阵表格,al矩阵表格中的实体将由此表格
         中的每个实体来创立."
    ::= { nl矩阵 1 }

hl矩阵控制实体          对象类型
    语法                HL矩阵控制实体
    最大输入            不可得
    状态                当前的
    描述

        "hl矩阵控制表格中一个概念上的行.

        此实体索引的一个例子是hl矩阵控制NL丢失帧.1"
    索引 { hl矩阵控制索引 }
    ::= { hl矩阵控制表格1 }

Hl矩阵控制实体::= 序列 {
    hl矩阵控制索引                   32位整数

    hl矩阵控制数据源                 数据源
    hl矩阵控制Nl丢失帧               32位计数器
    hl矩阵控制Nl增加                 32位计数器
    hl矩阵控制Nl删除                 32位计数器
    hl矩阵控制Nl最大希求实体          32位整数
    hl矩阵控制Al丢失帧                32位计数器
    hl矩阵控制Al增加                  32位计数器
    hl矩阵控制Al删除                 32位计数器
    hl矩阵控制Al最大希求实体          32位整数
    hhl矩阵控制业主                  业主字符串
    hl矩阵控制状态                   行状态
}

hl矩阵控制索引          对象类型
    语法                32位整数(1..65535)
    最大输入            不可得
    状态                当前的
    描述
        "唯一标示hl矩阵控制表格中的实体的索引.每个这样的实体定义一个发现
         一个特殊界面上交流的功能,并在此hl矩阵控制实体作用时于nl矩阵SD表
         格和nl矩阵DS表格和随意的al矩阵SD表格al矩阵DS表格中安放统计学表
         格."
    ::= { hl矩阵控制实体 1 }

hl矩阵控制数据源         对象类型
    语法                数据源
    最大输入            不可得
    状态                当前的
    描述
        "为相关矩阵表格的数据源.

         此组中的统计学表格影响所有与确定的界面有关系的
         局部网络段的信息包.

        如果相关的hl矩阵控制状态对象等于激活的(1),此对象不会被
        修改."
    ::= { hl矩阵控制实体 2 }


hl矩阵控制数NL丢失帧     对象类型
    语法                32位计数器
    最大输入            只读
    状态                当前的
    描述
       "由检测器接收到因而在*状态丢失事件不必计数的的帧的总数,但是因此检
        测器可因任何原因选择对此实体不计数.经常的,此事件在检测器资源不足
        从搜集断开时发生.

        此计数不包括因为MAC错误的信息包.

        注意,如果nl矩阵表格因为协议序列中无合适的协议而处于停止状态,此值
        为0.

        注意,不想丢失事件计数器,此为丢失帧的确切数字."
    ::= { hl矩阵控制实体 3 }

hl矩阵控制数NL增加      对象类型
    语法                32位计数器
    最大输入            只读
    状态                当前的
    描述
        "增加到nl矩阵表格中的nl矩阵实体的次数.如果一个实体被增加,然后删除,
         然后再增加,计数器以2为单位增加.增加到nl矩阵SD表格和hl矩阵DS表格
         中的通信将作为两个插入(虽然一个表格中的增加必须同时在另一个表格
         中也有一个增加)被计数.

         为了提高执行的有效性,代理装置必须在短暂的时间内延缓更新此对象,例
         如,一个执行策略可以允许短暂的时间内因特网数据类型不同于那些可见
         的通过SNMP.计数器可以在那些短暂时间内影响因特网数据结构.
       
        注意,nl矩阵SD表格和nl矩阵DS表格大小的总数可以通过从hl矩阵
        控制NL增加中减去hl矩阵控制NL减少的数目的方式增加."
    ::= { hl矩阵控制实体 4 }


hl矩阵控制数NL删除      对象类型
    语法                32位计数器
    最大输入            只读
    状态                当前的
    描述
        "(以任何原因)删除nl矩阵表格中的nl矩阵实体的次数.如果一个实体被删除,然后
增加,然后再删除,计数器以2为单位增加.删除到nl矩阵SD表格和hl矩阵DS表格
        中的通信将作为两个删除(虽然一个表格中的删除必须同时在另一个表格
        中也有一个删除)被计数.

         为了提高执行的有效性,代理装置必须在短暂的时间内延缓更新此对象,例
         如,一个执行策略可以允许短暂的时间内因特网数据类型不同于那些可见
         的通过SNMP.计数器可以在那些短暂时间内影响因特网数据结构.

          注意,nl矩阵SD表格和nl矩阵DS表格大小的总数可以通过从hl矩阵
        控制NL删除中减去hl矩阵控制NL增加的数目的方式增加."
    ::= { hl矩阵控制实体 5 }



hl矩阵控制数NL最大希求实体      对象类型
    语法                    32位整数(-1..2147483647)
    最大输入                创立读
    状态                    当前的
    描述
        "此控制实体作用时在nl矩阵表格中希求的实体的最大数目.检测器不能
         创立多于此数目的相关实体在表格中,但是可以以包括字眼短缺在内的
         任何原因选择创立较少的实体.


        如果此对象被设定为一个少于当前实体数目的值,足够的实体按依赖执行
        的风格被选择并删除,则表格中的实体的数目等于此对象的值.

        如果此值社为-1,检测器可以在表格中创立任何数目的实体.如果相关的
        hl矩阵控制状态实体处于激活状态,此对象不会被更改.
        此对象可用来控制在检测器上分配多少资源给各种RMON功能."
    ::= { hl矩阵控制实体 6 }


hl矩阵控制数AL丢失帧     对象类型
    语法                32位计数器
    最大输入            只读
    状态                当前的
    描述
       "由检测器接收到因而在*状态丢失事件不必计数的的帧的总数,但是因此检
        测器可因任何原因选择对此实体不计数.经常的,此事件在检测器资源不足
        从搜集断开时发生.

        此计数不包括因为MAC层错误的信息包.

        注意,如果nl矩阵表格因为协议序列中无合适的协议而处于停止状态,此值
        为0.

        注意,不像丢失事件计数器,此为丢失帧的确切数字."
    ::= { hl矩阵控制实体 7 }

hl矩阵控制数AL增加      对象类型
    语法                32位计数器
    最大输入            只读
    状态                当前的
    描述
        "增加到al矩阵表格中的al矩阵实体的次数.如果一个实体被增加,然后删除,
         然后再增加,计数器以2为单位增加.增加到al矩阵SD表格和hl矩阵DS表格
         中的通信将作为两个插入(虽然一个表格中的增加必须同时在另一个表格
         中也有一个增加)被计数.

         为了提高执行的有效性,代理装置必须在短暂的时间内延缓更新此对象,例

         如,一个执行策略可以允许短暂的时间内因特网数据类型不同于那些可见
         的通过SNMP.计数器可以在那些短暂时间内影响因特网数据结构.

       
        注意,al矩阵SD表格和nl矩阵DS表格大小的总数可以通过从hl矩阵

        控制AL增加中减去hl矩阵控制NL减少的数目的方式增加."
    ::= { hl矩阵控制实体 8 }
hl矩阵控制数AL删除      对象类型
    语法                32位计数器

    最大输入            只读
    状态                当前的
    描述
        "(以任何原因)删除al矩阵表格中的al矩阵实体的次数.如果一个实体被删除,然后
增加,
         然后再删除,计数器以2为单位增加.删除到al矩阵SD表格和al矩阵DS表格
         中的通信将作为两个删除(虽然一个表格中的删除必须同时在另一个表格
         中也有一个删除)被计数.

         为了提高执行的有效性,代理装置必须在短暂的时间内延缓更新此对象,例
         如,一个执行策略可以允许短暂的时间内因特网数据类型不同于那些可见
         的通过SNMP.计数器可以在那些短暂时间内影响因特网数据结构.

          注意,al矩阵SD表格和al矩阵DS表格大小的总数可以通过从hl矩阵
        控制AL删除中减去hl矩阵控制AL增加的数目的方式增加."
    ::= { hl矩阵控制实体 9 }


hl矩阵控制数AL最大希求实体      对象类型
    语法                    32位整数(-1..2147483647)
    最大输入                创立读
    状态                    当前的
    描述
        "此控制实体作用时在nl矩阵表格中希求的实体的最大数目.检测器不能
         创立多于此数目的相关实体在表格中,但是可以以包括字眼短缺在内的
         任何原因选择创立较少的实体.

        如果此对象被设定为一个少于当前实体数目的值,足够的实体按依赖执行
        的风格被选择并删除,则表格中的实体的数目等于此对象的值.

        如果此值社为-1,检测器可以在表格中创立任何数目的实体.如果相关的
        hl矩阵控制状态实体处于激活状态,此对象不会被更改.

        此对象可用来控制在检测器上分配多少资源给各种RMON功能."
    ::= { hl矩阵控制实体 10 }

hl矩阵控制业主      对象类型
    语法           业主串
    最大输入        创立读
    状态                当前的
    描述
        "配置入口并使用分配给它的资源的实体."
    ::= { hl矩阵控制实体 11 }

hl矩阵控制状态      对象类型
    语法            行状态
    最大输入         创立读
    状态                当前的
    描述
        "此hl矩阵控制实体的状态.

         只有当其中的所有的对象都具有适当的值一个实体才可以处于激活状态.

         如果此对象不等于激活的(1),nl矩阵SD表格,nl矩阵DS表格,al矩阵SD表
         格,al矩阵DS表格中相关的实体将会被代理装置删除."
    ::= { hl矩阵控制实体 12 }

hl矩阵控制SD表格       对象类型
    语法              NL矩阵SD实体序列
    最大输入          不可得
    状态                当前的
    描述
        "为两个网络层地址之间的通信搜集统计学表格的传输矩阵实体的目录.此表格
         首先由地址源索引其次由目的地址索引,为了使从特殊的地址发出的通信的搜
         集变得容易.


        检测器将设置此表格为协议目录表格中的协议目录矩阵配置等于支持开的所有
        网络层协议,并删除任何协议目录实体被删除或者其协议目录矩阵配置值等于
        支持关(2)的实体.

        检测器将在此表格中填充所有信息包中无MAC错误的地址对,并将在表格中
        增加八进制字符串和信息包计数为所有的无MAC错误的信息包.

        更进一层的,表格将仅仅包含在nl矩阵DS表格中有和源地址目的地址一样的
        入口的实体."
    ::= { nl矩阵 2 }

hl矩阵控制SD实体       对象类型
    语法              NL矩阵SD实体
    最大输入          不可得
    状态                当前的
    描述
        "nl矩阵SD表格中概念上的行.

         索引中的hl矩阵控制索引值描述了实体创立时hl矩阵控制实体.索引的hl
         协议目录局部索引值描述了nl矩阵SD源地址和nl矩阵SD目的地址的网络
         层协议.

         此表格的索引的一个例子为nl矩阵SDPkts.1.783495.18.4.128.2.6.6.
         4.128.2.6.7"
    索引 {hl矩阵控制索引,nl矩阵SD时间标记,协议目录局部索引,
          nl矩阵SD源地址,nl矩阵SD目的地址}
    ::= { nl矩阵SD表格 1 }

Nl矩阵SD实体::= 序列 {
    nl矩阵SD时间标记            时间过滤器
    nl矩阵SD源地址              八进制字符串
    nl矩阵SD目的地址            八进制字符串
    nl矩阵SDPkt                 基于零的32位计数器
    nl矩阵SD八进制字符串         基于零的32位计数器
    nl矩阵SD创立时间            最新更新时间
}

nl矩阵控制SD时间标记       对象类型
    语法              时间过滤器
    最大输入          不可得
    状态                当前的
    描述
        "此实体的一个时间过滤器.工作细节参阅时间过滤器文本的
         协定.
    ::= { nl矩阵SD实体 1 }

nl矩阵控制SD源地址       对象类型

    语法             八进制字符串
    最大输入          不可得
    状态                当前的
    描述
        "nl矩阵SD实体的源地址.

        他以一个八进制字符串的并具有特殊的语义和由此索引的协议目
        录局部索引成分描述的长度的形式被给出.

        例如,如果洗衣目录局部索引显示ip的一个封装,此对象按照网络
        比特顺序被编码成长度为4个八进制字符串,跟着4个八进制字符
        串(ip地址)."
    ::= { nl矩阵SD实体 2 }

nl矩阵控制SD目的地址       对象类型
    语法             八进制字符串
    最大输入          不可得
    状态                当前的
    描述
        "nl矩阵SD实体的网络层目的地址.

        他以一个八进制字符串的并具有特殊的语义和由此索引的协议目
        录局部索引成分描述的长度的形式被给出.

        例如,如果洗衣目录局部索引显示ip的一个封装,此对象按照网络
        比特顺序被编码成长度为4个八进制字符串,跟着4个八进制字符
        串(ip地址)."
    ::= { nl矩阵SD实体 3 }

nl矩阵SDPkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "由源地址传到目的地址的无错的信息包的数目,自从它被加入到nl矩阵目
         录以来. 注意,此为链路层信息包的数目,所以如果一个单独的网络层信
         息包被加入到几个链路层帧中,计数器将工作好几次."
    ::= { nl矩阵SD实体 4 }

nl矩阵SD八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述
        "从源地址传输到目的地址的八进制字符串的数目,自从它被加入到nl
         矩阵表格中(包括帧比特不包括FCS八进制字符串),包括含有错误的

         信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."
    ::= { nl矩阵SD实体 5 }

nl矩阵SD创立时间          对象类型
    语法                最新更新时间
    最大输入             只读
    状态                当前的
    描述
        "当实体被最新激活时系统更新时间的的值,此可被管理中心使用来确定实体
         没有被删除并在两次检测之间被重新创立."
    ::= { nl矩阵SD实体 6 }


-- 从目的到源的传输矩阵表格.


nl矩阵DS表格            对象类型
    语法                HL矩阵DS实体序列
    最大输入            不可得
    状态                当前的
    描述
        "为两个网络层地址之间的通信搜集统计学表格的传输矩阵实体的目录.此表格
         首先由地址源索引其次由目的地址索引,为了使从特殊的地址发出的通信的搜
         集变得容易.

        检测器将设置此表格为协议目录表格中的协议目录矩阵配置等于支持开的所有
        网络层协议,并删除任何协议目录实体被删除或者其协议目录矩阵配置值等于

        支持关(2)的实体.


        检测器将在此表格中填充所有信息包中无MAC错误的地址对,并将在表格中
        增加八进制字符串和信息包计数为所有的无MAC错误的信息包.

        更进一层的,表格将仅仅包含在nl矩阵SD表格中有和源地址目的地址一样的
        入口的实体."
    ::= { nl矩阵 3 }

        
nl矩阵控制DS实体       对象类型
    语法              NL矩阵DS实体
    最大输入          不可得
    状态                当前的
    描述
        "nl矩阵DS表格中概念上的行.

         索引中的hl矩阵控制索引值描述了实体创立时hl矩阵控制实体.索引的hl
         协议目录局部索引值描述了nl矩阵DS源地址和nl矩阵DS目的地址的网络
         层协议.

         此表格的索引的一个例子为nl矩阵SDPkts.1.783495.18.4.128.2.6.6.
         4.128.2.6.7"
    索引 {hl矩阵控制索引,nl矩阵DS时间标记,协议目录局部索引,
          nl矩阵DS源地址,nl矩阵DS目的地址}
    ::= { nl矩阵DS表格 1 }
Nl矩阵DS实体::= 序列 {
    nl矩阵DS时间标记            时间过滤器
    nl矩阵DS源地址              八进制字符串
    nl矩阵DS目的地址            八进制字符串
    nl矩阵DSPkt                 基于零的32位计数器
    nl矩阵DS八进制字符串         基于零的32位计数器
    nl矩阵DS创立时间            最新更新时间
}

nl矩阵控制DS时间标记       对象类型
    语法              时间过滤器
    最大输入          不可得
    状态                当前的
    描述
        "此实体的一个时间过滤器.工作细节参阅时间过滤器文本的
         协定.
    ::= { nl矩阵DS实体 1 }

nl矩阵控制DS源地址       对象类型
    语法             八进制字符串
    最大输入          不可得

    状态                当前的
    描述
        "nl矩阵DS实体的源地址.

        他以一个八进制字符串的并具有特殊的语义和由此索引的协议目
        录局部索引成分描述的长度的形式被给出.

        例如,如果洗衣目录局部索引显示ip的一个封装,此对象按照网络
        比特顺序被编码成长度为4个八进制字符串,跟着4个八进制字符
        串(ip地址)."
    ::= { nl矩阵DS实体 2 }
    
nl矩阵控制DS目的地址       对象类型
    语法             八进制字符串
    最大输入          不可得
    状态                当前的
    描述
        "nl矩阵DS实体的网络层目的地址.

        他以一个八进制字符串的并具有特殊的语义和由此索引的协议目
        录局部索引成分描述的长度的形式被给出.

        例如,如果洗衣目录局部索引显示ip的一个封装,此对象按照网络
        比特顺序被编码成长度为4个八进制字符串,跟着4个八进制字符
        串(ip地址)."
    ::= { nl矩阵DS实体 3 }

nl矩阵DSPkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "由源地址传到目的地址的无错的信息包的数目,自从它被加入到nl矩阵目
         录以来. 注意,此为链路层信息包的数目,所以如果一个单独的网络层信
         息包被加入到几个链路层帧中,计数器将工作好几次."
    ::= { nl矩阵DS实体 4 }

nl矩阵DS八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的

    描述
        "从源地址传输到目的地址的八进制字符串的数目,自从它被加入到nl
         矩阵表格中(包括帧比特不包括FCS八进制字符串),包括含有错误的
         信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."
    ::= { nl矩阵DS实体 5 }
nl矩阵DS创立时间          对象类型
    语法                最新更新时间
    最大输入             只读
    状态                当前的
    描述
        "当实体被最新激活时系统更新时间的的值,此可被管理中心使用来确定实体
         没有被删除并在两次检测之间被重新创立."
    ::= { nl矩阵DS实体 6 }

nl矩阵顶N控制表格          对象类型
    语法              NL矩阵顶N控制实体序列
    最大输入           不可得
    状态                当前的
    描述
        "控制按照选定的公制顶N矩阵实体报告创立的一套参数."
    ::= { nl矩阵 4 }


nl矩阵顶N控制实体          对象类型
    语法              NL矩阵顶N控制实体

    最大输入           不可得
    状态                当前的
    描述
        "nl矩阵顶N控制表格中一个概念上的行.

         此表格索引的一个例子为nl矩阵顶N控制持
         续时间.3"
    索引 { nl矩阵顶N控制索引 }
    ::= { nl矩阵顶N控制表格 1 }

Nl矩阵顶N控制实体 ::= 序列 {
    nlMatrix顶N控制索引             32位整数


    nlMatrix顶N控制矩阵索引          32位整数
    nlMatrix顶N控制费用基础          整数
    nlMatrix顶N控制时间保留          32位整数
    nlMatrix顶N控制发生报告          32为计数器
    nlMatrix顶N控制持续时间          32位整数
    nlMatrix顶N控制要求尺寸          32位整数
    nlMatrix顶N控制允许大小          32位整数
    nlMatrix顶N控制开始时间          时间标记
    nlMatrix顶N控制业主              业主字符串
    nlMatrix顶N控制状态              行状态
}

nl矩阵顶N控制索引          对象类型
    语法              32位整数(1..65535)
    最大输入           不可得
    状态                当前的
    描述
        "单独标示nl矩阵顶N控制表格中实体的索引.每个这样
         的实体定义了一个为一个界面准备的顶N报告."
    ::= { nl矩阵顶N控制实体 1 }

nl矩阵顶N矩阵索引          对象类型
    语法              32位整数(1..65535)
    最大输入          创立读
    状态                当前的
    描述
        "nl矩阵[SD/DS]表格的一个顶N报告在此实体作用时准备好了.nl矩阵[SD/DS]

                表格由那个表格-此值用于此来确定特定的表格,的hl矩阵控制索引的值
确定.

        如果nl矩阵顶N控制状态对象等于激活的(1),此对象不会被改变."
    ::= { nl矩阵顶N控制实体 2 }

nl矩阵顶N控制率基础      对象类型
    语法           整数 {

                    nl矩阵顶NPkts(1),
                    nl矩阵顶N八进制字符串(2)
                }
    最大输入     创立读
    状态       当前的
    描述
        "对nl矩阵顶N实体进行分类的针对每个nl矩阵[SD/DS]实体的变量.


        如果相关的nl矩阵顶N控制状态对象等于激活的(1),此对象不会被改变."
    ::= { nl矩阵顶N控制实体 3 }

nl矩阵顶N控制时间保留          对象类型

    语法              32位整数(0..2147483647)
    最大输入          创立读
    状态                当前的
    描述
        "当前被选择的留于报告中的间隔的数目.当此对象被管理中心
         改变,开始一个新的搜集,并且很可能中断当前运行的一个报告.
         此新值被用作报告的要求时间间隔,并被及时的存入nl矩阵顶N控
         制时间间隔对象中.
         当此报告结束了,检测器将按照nl矩阵顶N控制时间保留最初的值
         自动开始另外的搜集.这样管理装置可以简单的重复阅读结果报告,
         检查开始时间和每段时间间隔以确定报告没有丢失或者报告的变量
         没有被改变.

         当此对象的值非零,它将以每秒一个单位减小直至为零.同时此对象
         减小到零,nl矩阵顶N表格中此报告很容易得到,它会覆盖这里的任何
         的报告.


         当此对象被管理中心改变,任何nl矩阵顶N表格中的相关的实体被删除.

        (注意,这是一个与主机顶N表格中使用的不同的法则)."
    DEFVAL { 1800 }
    ::= { nl矩阵顶N控制实体 4 }

nl矩阵顶N控制发生报告          对象类型
    语法              32位计数器
    最大输入          只读
    状态                当前的
    描述
        "被实体产生的报告的数目."
    ::= { nl矩阵顶N控制实体 5 }


nl矩阵顶N控制持续时间          对象类型
    语法              32位整数
    最大输入          只读
    状态                当前的
    描述
        "在上一个取样间隔中被此报告搜集的间隔的数目.

        当相关的hl矩阵顶N控制时间保留对象被设定了,此对象将被检测器
        设定为相同的值,并在下一个nl矩阵顶N控制时间保留被设定之前不

        会被改变.如果没有报告被要求为此nl矩阵顶N控制实体此值将会成
        为零.
    ::= { nl矩阵顶N控制实体 6 }


nl矩阵顶N控制要求大小          对象类型
    语法              32位整数(0..2147483647)
    最大输入          创立读
    状态                当前的
    描述
        "为此实体要求的实体的最大数目.

         当此实体被创立或个改变,检测器将为特殊的检测器执行和可得
         的资源尽可能的将nl矩阵顶N控制准许大小设置和此对象接近的
         值."
    DEFVAL { 150 }
    ::= { nl矩阵顶N控制实体 7 }

nl矩阵顶N控制准许大小          对象类型
    语法              32位整数(0..2147483647)
    最大输入          创立读
    状态                当前的
    描述
        "此报告中的最大实体的最大数目.

        当相关的nl矩阵顶N控制要求大小对象被创立或者改变,检测器为特殊的
        执行和可得的资源将此对象设为和要求值相接近的值.检测器不可以减少
        此值除非设置相关的nl矩阵顶N控制要求大小对象.

        如果nl句很顶N控制率基础的值等于nl矩阵顶NPkt,当下一个顶N报告被发出,
        具有nl矩阵顶NPkt率最大值的最大实体将按此率减少的顺序被安放到此表格
        中,直到无空间或者无最大实体.



        如果nl矩阵顶N控制率基础的值等于nl矩阵顶N八进制字符串,当下一个顶N报告
        被提出,具有nl矩阵顶NPkt率最大值的最大实体将按此率减少的顺序被安放到此
        表格中,直到无空间或者无最大实体.

        过一个特定的执行指明了挑出了具有和nl矩阵顶NPKt率或者nl矩阵顶N八进制字
        符串率相同的值的实体.零值实体是否可得也是一个特殊的执行."
    ::= { nl矩阵顶N控制实体  8 }

nl矩阵顶N控制开始时间          对象类型

    语法              时间标记
    最大输入          只读
    状态                当前的
    描述

        "当最新顶N报告开始时系统更新时间的值.换句话说,相关的nl矩阵顶N控
         制时间保留时时刻或者最新报告自动开始时的时刻.

         管理中心用此对象来确定一个报告是否丢失了."
    ::= { nl矩阵顶N控制实体  9 }

nl矩阵顶N控制业主         对象类型
    语法             业主字符串
    最大输入         创立读
    状态             当前的
    描述
        "配置入口并使用分配给它的资源的实体."
    ::= { nl矩阵顶N控制实体   10 }

nl矩阵顶N控制状态         对象类型
    语法             行状态
    最大输入         创立读
    状态             当前的
    描述
        "nl矩阵顶N控制实体的状态.

         只有当其中的所有的对象都具有适当的值一个实体才可以处于激活状态.

         如果此对象不等于激活的(1),nl矩阵SD表格,nl矩阵DS表格,al矩阵SD表
         格,al矩阵DS表格中相关的实体将会被代理装置删除."
        { nl矩阵顶N控制实体   11 }


nl矩阵顶N表格        对象类型
    语法            NL矩阵顶N实体序列

    最大输入        不可得
    状态             当前的
    描述
        "那些网络层矩阵实体的一套统计学表格,用来对八进制字符串或者信息
         包进行计数."
    ::= { nl矩阵 5 }

nl矩阵顶N实体        对象类型
    语法            NL矩阵顶N实体
    最大输入        不可得
    状态             当前的
    描述
        "nl矩阵顶N表格中概念上的行.

         索引中的nl矩阵顶N控制索引值描述了实体创立时nl矩阵顶N控制实体.


         此表格的索引的一个例子为nl矩阵顶NPkt率.3.10"
    索引 { nl矩阵顶N控制索引, nl矩阵顶N索引 }
    ::= { nl矩阵顶N表格 1 }

nl矩阵顶N实体 ::= 序列 {
    nl矩阵顶N索引                       32位整数,

    nl矩阵顶N协议目录局部索引            32位整数,
    nl矩阵顶N源地址                     八进制字符串,
    nl矩阵顶N目的地址                   八进制字符串,
    nl矩阵顶NPkt率                      32位标准,
    nl矩阵顶NN反Pkt率                   32位标准,
    nl矩阵顶N八进制字符串率              32位标准,

    nl矩阵顶N反八进制字符串率            32位标准,
}

nl矩阵顶N控制索引          对象类型
    语法                32位整数(1..65535)
    最大输入            不可得
    状态                当前的
    描述
        "同一报告中唯一标示nl矩阵顶N表格中的实体的索引.此索引在1到N之间,N代

         表报告中实体的数目.
        如果nl矩阵顶N控制率基础的值等于nl矩阵顶NPkt,nl矩阵顶N索引渐增的值将
        和渐增的nl矩阵顶NPkt率的值一同被分配给实体,直到第N个索引被分配了或
        者没有更多的nl矩阵顶N实体.
    ::= { nl矩阵顶N实体 1 }

nl矩阵顶N协议目录局部索引          对象类型
    语法              32位整数(0..2147483647)
    最大输入          只读
    状态                当前的
    描述
        "此实体网络地址的网络层协议的协议目录局部索引."
    ::= { nl矩阵顶N实体  2 }

nl矩阵顶N源地址       对象类型
    语法             八进制字符串
    最大输入          只读
    状态                当前的
    描述
        "此通话中源主机的网络层地址.

         此由一个八进制字符串描述,此字符串具有由相关的nl矩阵顶N协议
         目录局部索引定义的特殊的语义和长度.

         例如,如果协议目录局部索引指出一个iP的封装,此对象被解码为一个
         长度为4的八进制字符串,跟着一个长度为4的八进制字符串为ip地址,
         按照网络层比特顺序.

    ::= { nl矩阵顶N实体 3 }

nl矩阵顶N目的地址       对象类型
    语法             八进制字符串
    最大输入          只读
    状态                当前的
    描述

        "此通话中的目的主机网络地址.

        他以一个八进制字符串的并具有特殊的语义和由nl矩阵顶N协议目
        录局部索引成分描述的长度的形式被给出.

        例如,如果nl矩阵顶N协议目录局部索引显示ip的一个封装,此对象
        按照网络比特顺序被编码成长度为4个八进制字符串,跟着4个八进
        制字符串(ip地址)."
    ::= { nl矩阵顶N实体 4 }

nl矩阵DSPkt率   对象类型
    语法       32位标准

    最大输入     只读
    状态           当前的
    描述
        "取样其间从源地址传输到目的地址的八进制字符串的数目,
         使用对nl矩阵SDPkt对象计数的原则来计数.
         如果nl矩阵顶N控制率基础的值是nl矩阵顶NPkt,此变量用于"
    ::= { nl矩阵顶N实体 5 }

nl矩阵DS反Pkt率   对象类型
    语法       32位标准
    最大输入     只读
    状态           当前的
    描述
        "取样其间从目的地址传输到源地址的八进制字符串的数目,
         使用对nl矩阵SDPkt对象计数的原则来计数(注意,相应的nl
                矩阵SDPkt选择源地址等于nl矩阵顶N目的地址目的地址等
         于nl矩阵顶N目的地址的.)

         注意,如果nl矩阵顶N控制率基础的值等于nl矩阵顶NPkt,顶N
         实体的分配完全基于nl矩阵顶NPkt率,而不是此对象的值."
    ::= { nl矩阵顶N控制实体 6 }


nl矩阵DS八进制字符串率   对象类型

    语法       32位标准
    最大输入     只读
    状态           当前的
    描述
    
        "取样其间从源地址传输到目的地址的八进制字符串的数目,
         使用对nl矩阵SD八进制字符串对象计数的原则来计数.
         如果nl矩阵顶N控制率基础的值是nl矩阵顶N八进制字符串,此
         变量用于区别报告"
    ::= { nl矩阵顶N实体 7 }

nl矩阵DS反八进制字符串率   对象类型
    语法       32位标准
    最大输入     只读
    状态           当前的
    描述
        "取样其间从目的地址传输到源地址的八进制字符串的数目,
         使用对nl矩阵SD八进制字符串对象计数的原则来计数(注意,
         相应的nl矩阵SDP八进制字符串选择源地址等于nl矩阵顶N目
         的地址目的地址等于nl矩阵顶N源地址的.)
.
         如果nl矩阵顶N控制率基础的值是nl矩阵顶N八进制字符串,此
         变量用于区别报告"
    ::= { nl矩阵顶N实体 8 }

-- 应用层功能
--
-- 应用层主机,矩阵,矩阵顶N功能关于协议使用的报告在网络层或更高
   的层.注意,使用此条款,应用层协议并不意味着应用层协议被计数,也
   不意味着依靠协议并包括支持应用层.

--
-- 应用层主机租
--
-- 由协议统计从检测器发现的每个网络层地址发出的信息的总和.
-- 此组的执行要求网络层主机组的执行.

al主机表格      对象类型
    语法        AL主机实体序列
    最大输入     不可得
    状态          当前的
    描述
        "为一个特殊的协议搜集的,从此设备的界面上发现的一个特定的网络层
         地址发出的统计学表格的搜集.


         检测器为协议表格中协议目录主机配置值等于支持开(3)的所有网络
         层协议设置此表格,并删除协议目录实体被删除或其协议目录主机配
         置值为支持关(2)的任意实体.

         检测器将会把无MAC错误的所有信息包的源或目的地址填入此表格中.
         并在表格中为所有无MAC错误信息包添加八进制字符串和信息包数目.
         更进一步的,只有当地址在nl主机表格中存在的实体才会被增加到此
         表格中,并在地址从nl主机表格中删除时被删除."
    ::= { al主机 1 }


al主机实体     对象类型
    语法       AL主机实体
    最大输入     不可得
    状态         当前的
    描述
        "al主机表格中一个概念上的行.

         索引中hl主机控制索引的值描述了实体创立时hl主机控制实体.索引中
         第一个协议目录局部索引的值描述了地址网络层协议.
         索引中nl主机地址描述了此实体的网络层地址.
         索引中第二个协议目录局部索引值描述了由此实体计数的协议.

         此实体索引的一个例子是al主机输出Pkt.1.783495.18.4.128.2.6.6.34"
    索引 { hl主机控制索引,al主机时间标记,协仪目录局部索引,al主机地址 }
    ::= { al主机表格 1 }


Al主机实体::=   序列 {
    al主机时间标记               时间过滤器
    al主机输入Pkts               基于零的32位计数器,
    al主机输出Pkts               基于零的32位计数器,
    al主机输入八进制字符串        基于零的32位计数器,
    al主机输出八进制字符串        基于零的32位计数器,
    al主机输出Mac无UnicastPkts  基于零的32位计数器,
    al主机创立时间              最新创立时间
}

al主机时间标记    对象类型
    语法       时间过滤器
    最大输入     不可得
    状态           当前的
    描述
        "此实体的一个时间过滤器.了解其工作方式参阅时间过滤
         器文本协定."
    ::= { al主机实体 1 }

al主机输入Pkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "被传输到此地址的无错的信息包的数目,自从它被加入到al主机目录以来.
         注意,此为链路层信息包的数目,所以如果一个单独的网络层信息包被加入
         到几个链路层帧中,计数器将工作好几次."

    ::= { al主机实体 2 }

al主机输出Pkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "被传输到此地址的无错的信息包的数目,自从它被加入到al主机目录以来.
         注意,此为链路层信息包的数目,所以如果一个单独的网络层信息包被加入
         到几个链路层帧中,计数器将工作好几次."
    ::= { al主机实体 3 }

al主机输入八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述
        "被传输到此地址的八进制字符串的数目,自从它被加入到al
         主机表格中(包括帧比特不包括FCS八进制字符串),包括含
         有错误的信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."
    ::= { al主机实体 4 }


al主机输出八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述
        "由此地址传输出的八进制字符串的数目,自从它被加入到al
         主机表格中(包括帧比特不包括FCS八进制字符串),包括含
         有错误的信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."
    ::= { al主机实体 5 }

al主机创立时间          对象类型
    语法                最新更新时间
    最大输入             只读
    状态                当前的
    描述

        "当实体被最新激活时系统更新时间的的值,此可被管理中心使用来确定实体
         没有被删除并在两次检测之间被重新创立."
    ::= { al主机实体 6 }

--
-- 应用层矩阵组
-- 对由检测器发现的每对网络层地址间的交通量进行计数.
-- 此组的执行要求网络层矩阵组的执行.

al矩阵控制SD表格       对象类型
    语法              AL矩阵SD实体序列
    最大输入          不可得
    状态                当前的
    描述
        "为两个网络层地址之间的通信搜集统计学表格的传输矩阵实体的目录.此表格




         首先由地址源索引其次由目的地址索引,为了使从特殊的地址发出的通信的搜
         集变得容易.

        检测器将设置此表格为协议目录表格中的协议目录矩阵配置等于支持开的所有
        网络层协议,并删除任何协议目录实体被删除或者其协议目录矩阵配置值等于
        支持关(2)的实体.检测器将在此表格中填充所有信息包中无MAC错误的地址对,
        并将在表格中增加八进制字符串和信息包计数为所有的无MAC错误的信息包.


        更进一层的,表格将仅仅包含在nl矩阵DS表格中有和源地址目的地址一样的
        入口的实体."
    ::= { al矩阵 1 }

al矩阵控制SD实体       对象类型
    语法              AL矩阵SD实体
    最大输入          不可得
    状态                当前的
    描述
        "al矩阵SD表格中概念上的行.

         索引中的hl矩阵控制索引值描述了实体创立时hl矩阵控制实体.索引的第
         一个协议目录局部索引值描述了nl矩阵SD源地址和nl矩阵SD目的地址的
         网络层协议.
         索引中的nl矩阵SD源地址的值描述了此通话中的源主机的网络层地址.索
         引的nl矩阵SD目的地址的值描述了此通话中的目的主机的网络层地址.

         此表格的索引的一个例子为al矩阵SDPkts.1.783495.18.4.128.2.6.6.
         4.128.2.6.7.34"
    索引 {hl矩阵控制索引,al矩阵SD时间标记,协议目录局部索引,
          nl矩阵SD源地址,nl矩阵SD目的地址}
    ::= { al矩阵SD表格 1 }



Al矩阵SD实体::= 序列 {
    al矩阵SD时间标记            时间过滤器
    al矩阵SDPkt                 基于零的32位计数器
    al矩阵SD八进制字符串         基于零的32位计数器
    al矩阵SD创立时间            最新更新时间
}

al矩阵控制SD时间标记       对象类型
    语法              时间过滤器
    最大输入          不可得
    状态                当前的
    描述
        "此实体的一个时间过滤器.工作细节参阅时间过滤器文本的
         协定.

    ::= { al矩阵SD实体 1 }

al矩阵SDPkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "由源地址传到目的地址的无错的信息包的数目,自从它被加入到al矩阵目
         录以来. 注意,此为链路层信息包的数目,所以如果一个单独的网络层信
         息包被加入到几个链路层帧中,计数器将工作好几次."
    ::= { al矩阵SD实体 2 }

al矩阵SD八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述
        "从源地址传输到目的地址的八进制字符串的数目,自从它被加入到al
         矩阵表格中(包括帧比特不包括FCS八进制字符串),包括含有错误的
         信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."
    ::= { al矩阵SD实体 3 }

al矩阵SD创立时间          对象类型
    语法                最新更新时间
    最大输入             只读
    状态                当前的
    描述
        "当实体被最新激活时系统更新时间的的值,此可被管理中心使用来确定实体
         没有被删除并在两次检测之间被重新创立."
    ::= { al矩阵SD实体 4 }


-- 从目的到源的矩阵表格传输

al矩阵DS表格            对象类型
    语法                AL矩阵DS实体序列
    最大输入            不可得
    状态                当前的
    描述
        "为两个网络层地址之间的通信搜集统计学表格的传输矩阵实体的目录.此表格
         首先由目的地址索引其次由源地址索引,为了使从特殊的地址发出的通信的搜
         集变得容易.

        检测器将设置此表格为协议目录表格中的协议目录矩阵配置等于支持开的所有
        协议目录矩阵配置等于支持开(3)的网络层协议,并删除任何协议目录实体被删
        除或者其协议目录矩阵配置值等于支持关(2)的实体.


        检测器将在此表格中填充所有信息包中无MAC错误的地址对,并将在表格中
        增加八进制字符串和信息包计数为所有的无MAC错误的信息包.

        更进一层的,表格将仅仅包含在nl矩阵SD表格中有和源地址目的地址一样的

        入口的实体."
    ::= { al矩阵 2 }

al矩阵控制DS实体       对象类型
    语法              AL矩阵DS实体
    最大输入          不可得
    状态                当前的
    描述
        "nl矩阵DS表格中概念上的行.

         索引中的hl矩阵控制索引值描述了实体创立时hl矩阵控制实体.索引的第
         一个协议目录局部索引值描述了al矩阵DS源地址和al矩阵DS目的地址的
         网络层协议.



         索引的nl矩阵DS目的地址描述了此通话中目的主机的网络层地址.
         索引的nl矩阵DS源地址描述了此通话中源主机的网络层地址.

         此表格的索引的一个例子为al矩阵SDPkts.1.783495.18.4.128.2.6.6.34"
    索引 {hl矩阵控制索引,al矩阵DS时间标记,
          协议目录局部索引,
          nl矩阵DS源地址,nl矩阵DS目的地址

          协议目录局部索引,}
    ::= { al矩阵DS表格 1 }
        

Al矩阵DS实体::= 序列 {
    al矩阵DS时间标记            时间过滤器
    al矩阵DSPkt                 基于零的32位计数器
    al矩阵DS八进制字符串         基于零的32位计数器
    al矩阵DS创立时间            最新更新时间
}

al矩阵控制DS时间标记       对象类型
    语法              时间过滤器
    最大输入          不可得
    状态                当前的

    描述
        "此实体的一个时间过滤器.工作细节参阅时间过滤器文本的
         协定.
    ::= { al矩阵DS实体 1 }

al矩阵DSPkts   对象类型
    语法       基于零的32位计数器
    最大输入     只读
    状态           当前的
    描述
        "由源地址传到目的地址的无错的信息包的数目,自从它被加入到al矩阵目
         录以来. 注意,此为链路层信息包的数目,所以如果一个单独的网络层信
         息包被加入到几个链路层帧中,计数器将工作好几次."
    ::= { al矩阵DS实体 2 }


nl矩阵DS八进制字符串   对象类型
    语法                基于零的32位计数器
    最大输入             只读
    状态                当前的
    描述

        "从源地址传输到目的地址的八进制字符串的数目,自从它被加入到al
         矩阵表格中(包括帧比特不包括FCS八进制字符串),包括含有错误的
         信息包中的八进制字符串.

        注意在特殊的协议帧中的八进制字符串不会被计数,但是包括
        含有此协议的实体信息包."

    ::= { al矩阵DS实体 3 }

al矩阵DS创立时间          对象类型
    语法                最新更新时间
    最大输入             只读
    状态                当前的
    描述

        "当实体被最新激活时系统更新时间的的值,此可被管理中心使用来确定实体
         没有被删除并在两次检测之间被重新创立."
    ::= { al矩阵DS实体 4 }
al矩阵顶N控制表格          对象类型
    语法              AL矩阵顶N控制实体序列
    最大输入           不可得
    状态                当前的
    描述
        "控制按照选定的公制顶N矩阵实体报告创立的一套参数."
    ::= { al矩阵 3 }

al矩阵顶N控制实体          对象类型
    语法              AL矩阵顶N控制实体
    最大输入           不可得

    状态                当前的
    描述
        "al矩阵顶N控制表格中一个概念上的行.


         此表格索引的一个例子为al矩阵顶N控制持
         续时间.3"
    索引 { al矩阵顶N控制索引 }
    ::= { al矩阵顶N控制表格 1 }

Al矩阵顶N控制实体 ::= 序列 {
    alMatrix顶N控制索引             32位整数
    alMatrix顶N控制矩阵索引          32位整数
    alMatrix顶N控制费用基础          整数
    alMatrix顶N控制时间保留          32位整数
    alMatrix顶N控制发生报告          32为计数器
    alMatrix顶N控制持续时间          32位整数
    alMatrix顶N控制要求尺寸          32位整数
    alMatrix顶N控制允许大小          32位整数
    alMatrix顶N控制开始时间          时间标记
    alMatrix顶N控制业主              业主字符串
    alMatrix顶N控制状态              行状态
}
  
al矩阵顶N控制索引          对象类型
    语法              32位整数(1..65535)
    最大输入           不可得
    状态                当前的
    描述
        "单独标示al矩阵顶N控制表格中实体的索引.每个这样
         的实体定义了一个为一个界面准备的顶N报告."
    ::= { al矩阵顶N控制实体 1 }

al矩阵顶N控制矩阵索引          对象类型
    语法              32位整数(1..65535)
    最大输入          创立读
    状态                当前的
    描述
        "nl矩阵[SD/DS]表格的一个顶N报告在此实体作用时准备好了.nl矩阵[SD/DS]
         表格由那个表格-此值用于此来确定特定的表格,的hl矩阵控制索引的值确定.

        如果nl矩阵顶N控制状态对象等于激活的(1),此对象不会被改变."
    ::= { al矩阵顶N控制实体 2 }

al矩阵顶N控制率基础      对象类型
    语法           整数 {
                    al矩阵顶N终端Pkts(1),
                    al矩阵顶N终端八进制字符串(2)
                    al矩阵顶N全Pkts(3),
                    al矩阵顶N全八进制字符串(2)

                }
    最大输入     创立读
    状态       当前的
    描述
        "对al矩阵顶N实体进行分类的针对每个al矩阵[SD/DS]实体的变量,以及
         将使用的矩阵表格的取景的选择器.

         al矩阵顶N终端PKt和al矩阵顶N终端八进制字符串的值引起搜集仅仅当无
         子协议的协议被计数,al矩阵顶N全PKt和al矩阵顶N全八进制字符串的值
         引起所有al矩阵实体的搜集.

        如果相关的nl矩阵顶N控制状态对象等于激活的(1),此对象不会被改变."
    ::= { al矩阵顶N控制实体 3 }


al矩阵顶N控制时间保留          对象类型
    语法              32位整数(0..2147483647)
    最大输入          创立读
    状态                当前的
    描述
        "当前被选择的留于报告中的间隔的数目.当此对象被管理中心
         改变,开始一个新的搜集,并且很可能中断当前运行的一个报告.
         此新值被用作报告的要求时间间隔,并被及时的存入al矩阵顶N控
         制时间间隔对象中.
         当此报告结束了,检测器将按照al矩阵顶N控制时间保留最初的值

         自动开始另外的搜集.这样管理装置可以简单的重复阅读结果报告,
         检查开始时间和每段时间间隔以确定报告没有丢失或者报告的变量
         没有被改变.


         当此对象的值非零,它将以每秒一个单位减小直至为零.同时此对象
         减小到零,nl矩阵顶N表格中此报告很容易得到,它会覆盖这里的任何
         的报告.

         当此对象被管理中心改变,任何al矩阵顶N表格中的相关的实体被删除.

        (注意,这是一个与主机顶N表格中使用的不同的法则)."

    DEFVAL { 1800 }
    ::= { al矩阵顶N控制实体 4 }
        




al矩阵顶N控制发生报告          对象类型
    语法              32位计数器
    最大输入          只读
    状态                当前的
    描述
        "被实体产生的报告的数目."
    ::= { al矩阵顶N控制实体 5 }


al矩阵顶N控制持续时间          对象类型
    语法              32位整数
    最大输入          只读
    状态                当前的
    描述
        "在上一个取样间隔中被此报告搜集的间隔的数目.

        当相关的al矩阵顶N控制时间保留对象被设定了,此对象将被检测器
        设定为相同的值,并在下一个al矩阵顶N控制时间保留被设定之前不
        会被改变.如果没有报告被要求为此al矩阵顶N控制实体此值将会成
        为零.
    ::= { al矩阵顶N控制实体 6 }

al矩阵顶N控制要求大小          对象类型
    语法              32位整数(0..2147483647)
    最大输入          创立读
    状态                当前的
    描述

        "为此实体要求的实体的最大数目.

         当此实体被创立或个改变,检测器将为特殊的检测器执行和可得
         的资源尽可能的将al矩阵顶N控制准许大小设置和此对象接近的
         值."
    DEFVAL { 150 }
    ::= { al矩阵顶N控制实体 7 }

al矩阵顶N控制准许大小          对象类型
    语法              32位整数(0..2147483647)
    最大输入          创立读
    状态                当前的
    描述
        "此报告中的最大实体的最大数目.

        当相关的al矩阵顶N控制要求大小对象被创立或者改变,检测器为特殊的
        执行和可得的资源将此对象设为和要求值相接近的值.检测器不可以减少
        此值除非设置相关的nl矩阵顶N控制要求大小对象.

    



        如果al句很顶N控制率基础的值等于al矩阵顶NPkt,当下一个顶N报告被发出,
        具有al矩阵顶NPkt率最大值的最大实体将按此率减少的顺序被安放到此表格
        中,直到无空间或者无最大实体.

        如果al矩阵顶N控制率基础的值等于al矩阵顶N八进制字符串,当下一个顶N报告
        被提出,具有al矩阵顶NPkt率最大值的最大实体将按此率减少的顺序被安放到此
        表格中,直到无空间或者无最大实体.

        过一个特定的执行指明了挑出了具有和al矩阵顶NPKt率或者al矩阵顶N八进制字
        符串率相同的值的实体.零值实体是否可得也是一个特殊的执行."
    ::= { al矩阵顶N控制实体  8 }

al矩阵顶N控制开始时间          对象类型
    语法              时间标记
    最大输入          只读
    状态                当前的
    描述
        "当最新顶N报告开始时系统更新时间的值.换句话说,相关的al矩阵顶N控
         制时间保留时时刻或者最新报告自动开始时的时刻.

         管理中心用此对象来确定一个报告是否丢失了."
    ::= { al矩阵顶N控制实体  9 }

al矩阵顶N控制业主         对象类型

    语法             业主字符串
    最大输入         创立读
    状态             当前的
    描述
        "配置入口并使用分配给它的资源的实体."
    ::= { al矩阵顶N控制实体   10 }

al矩阵顶N控制状态         对象类型
    语法             行状态
    最大输入         创立读
    状态             当前的

    描述

        "al矩阵顶N控制实体的状态.

         只有当其中的所有的对象都具有适当的值一个实体才可以处于激活状态.

         如果此对象不等于激活的(1),al矩阵顶N表格中相关的实体将会被代理
         装置删除."
     ::={ al矩阵顶N控制实体   11 }

al矩阵顶N表格        对象类型
    语法            AL矩阵顶N实体序列
    最大输入        不可得
    状态             当前的
    描述
        "那些网络层矩阵实体的一套统计学表格,用来对八进制字符串或者信息
         包最大值进行计数."

    ::= { al矩阵 4 }

al矩阵顶N实体        对象类型
    语法            AL矩阵顶N实体

    最大输入        不可得
    状态             当前的
    描述
        "al矩阵顶N表格中概念上的行.

         索引中的al矩阵顶N控制索引值描述了实体创立时al矩阵顶N控制实体.

         此表格的索引的一个例子为al矩阵顶NPkt率.3.10"
    索引 { al矩阵顶N控制索引, al矩阵顶N索引 }
    ::= { al矩阵顶N表格 1 }

Al矩阵顶N实体 ::= 序列 {
    al矩阵顶N索引                       32位整数,
    al矩阵顶N协议目录局部索引            32位整数,
    al矩阵顶N源地址                     八进制字符串,
    al矩阵顶N目的地址                   八进制字符串,




    al矩阵顶N协议目录局部索引             32位整数,
    al矩阵顶NPkt率                      32位标准,
    al矩阵顶NN反Pkt率                   32位标准,
    al矩阵顶N八进制字符串率              32位标准,
    al矩阵顶N反八进制字符串率            32位标准,
}


al矩阵顶N索引          对象类型
    语法                32位整数(1..65535)
    最大输入            不可得
    状态                当前的
    描述
        "同一报告中唯一标示al矩阵顶N表格中的实体的索引.此索引在1到N之间,N代
         表报告中实体的数目.


        如果al矩阵顶N控制率基础的值等于al矩阵顶NPkt,al矩阵顶N索引渐增的值将
        和渐增的al矩阵顶NPkt率的值一同被分配给实体,直到第N个索引被分配了或
        者没有更多的al矩阵顶N实体.


        如果al矩阵顶N控制率基础的值等于al矩阵顶终端NPkt或者al矩阵顶N全八进
        制字符串,al矩阵顶N索引渐增的值将和渐增的al矩阵顶NPkt率的值一同被分配
        给实体,直到第N个索引被分配了或者没有更多的al矩阵顶N实体.

    ::= { al矩阵顶N实体 1 }

al矩阵顶N协议目录局部索引          对象类型
    语法              32位整数(0..2147483647)
    最大输入          只读
    状态                当前的

    描述
        "此实体网络地址的网络层协议的协议目录局部索引."
    ::= { al矩阵顶N实体  2 }

al矩阵顶N源地址       对象类型

    语法             八进制字符串
    最大输入          只读
    状态                当前的

    描述
        "此通话中源主机的网络层地址.

         此由一个八进制字符串描述,此字符串具有由相关的al矩阵顶N协议
         目录局部索引定义的特殊的语义和长度.

         例如,如果协议目录局部索引指出一个iP的封装,此对象被解码为一个
         长度为4的八进制字符串,跟着一个长度为4的八进制字符串为ip地址,
         按照网络层比特顺序.
    ::= { al矩阵顶N实体 3 }
        

al矩阵顶N目的地址       对象类型
    语法             八进制字符串
    最大输入          只读
    状态                当前的
    描述
        "此通话中的目的主机网络地址.

        他以一个八进制字符串的并具有特殊的语义和由al矩阵顶N协议目
        录局部索引成分描述的长度的形式被给出.

        例如,如果nl矩阵顶N协议目录局部索引显示ip的一个封装,此对象
        按照网络比特顺序被编码成长度为4个八进制字符串,跟着4个八进
        制字符串(ip地址)."
    ::= { al矩阵顶N实体 4 }

al矩阵顶N协议目录局部索引       对象类型
    语法             32位整数(1....214783647)
    最大输入          只读

    状态                当前的
    描述
        "由此矩阵实体计数的协议的类型."
    ::= { al矩阵顶N实体 5 }

al矩阵DSPkt率   对象类型
    语法       32位标准
    最大输入     只读
    状态           当前的
    描述
        "取样其间从源地址传输到目的地址的八进制字符串的数目,
         使用对al矩阵SDPkt对象计数的原则来计数.
         如果nl矩阵顶N控制率基础的值是al矩阵顶NPkt,此变量用于"
    ::= { al矩阵顶N实体 6 }




al矩阵DS反Pkt率   对象类型
    语法       32位标准
    最大输入     只读
    状态           当前的
    描述
        "取样其间从目的地址传输到源地址的八进制字符串的数目,
         使用对al矩阵SDPkt对象计数的原则来计数(注意,相应的al
         矩阵SDPkt选择源地址等于al矩阵顶N目的地址目的地址等
         于al矩阵顶N目的地址的.)

         注意,如果al矩阵顶N控制率基础的值等于al矩阵顶NPkt,顶N
         实体的分配完全基于al矩阵顶NPkt率,而不是此对象的值."
    ::= { al矩阵顶N控制实体 7 }

al矩阵DS八进制字符串率   对象类型
    语法       32位标准
    最大输入     只读
    状态           当前的
    描述

        "取样其间从源地址传输到目的地址的八进制字符串的数目,
         使用对al矩阵SD八进制字符串对象计数的原则来计数.
         
         如果al矩阵顶N控制率基础的值是nl矩阵顶N终端八进制字
         符串或者nl矩阵顶N全八进制字符串,此变量用于区别报告"
    ::= { al矩阵顶N实体 8 }

al矩阵DS反八进制字符串率   对象类型
    语法       32位标准
    最大输入     只读
    状态           当前的
    描述
        "取样其间从目的地址传输到源地址的八进制字符串的数目,
         使用对al矩阵SD八进制字符串对象计数的原则来计数(注意,
         相应的al矩阵SDP八进制字符串选择源地址等于al矩阵顶N目
         的地址目的地址等于al矩阵顶N源地址的.)
.

         如果al矩阵顶N控制率基础的值是al矩阵顶N终端八进制字符
         串或者al矩阵顶N全八进制字符串,此变量用于区别报告"
    ::= { al矩阵顶N实体 9 }


--
-- 用户记录搜集组(用户记录)
--
-- 用户记录联合警告和记录组中出现的机制来提供指定用户记录的搜集,

-- 通过利用两个附加的控制表格和一个数据表格.此功能传统上由NMS应
-- 用软件在每个周期的取样过程中实现.用户记录允许一个RMON检测器
-- 不执行此工作.
--
-- 数据(一个基于 ASN.1 整数的对象)通过和任何历史数据表格(例如,以
-- 太网记录表格)相同的机制搜集,除非在用户指定的搜集的MIB情况下.对

-- 象被ROMN检测器尽可能自动的搜集到以桶为单位的组中,一并的还有所有
-- MIB场合下的目的.
--
-- 用户记录控制表格是一个单空间创立读的表格.每个行配置一个用户记录桶,
-- 也称为记录控制实体,的搜集,,除非在此表格中创立一个行引起了在用户记
-- 录表格中要创立一个或多个相关的对象.用户定义了所需的桶元素(用户记录
-- 对象表格中的行)的数目以及桶的数目.
--
-- 用户记录对象表格是一个双方读写的表格.
-- 每个行配置了一个单独的要搜集的MIB情况.
-- 所有具有相同主索引的行构成了一个桶组.
--

-- 用户记录表格是一个包含相关用户记录控制实体数据的3方只读的表格,
-- 在一个特定的取样间隔(或者在间隔中的变化的几率)每个实体提供了一
-- 个单独的MIB情况.
--
-- 一个取样的值被分成两个对象-绝对值和状态对象.他允许从-(2G-1)到+4G
--   的数可被区分.状态对象也可以描述一个间隔是否可得.此允许数据搜集在
-- 一个特殊的间隔的周期的恢复因某些原因失败后继续进行.
--
-- 创立行命令联系
--




-- 用户记录对象表格的静态特性创立了一些行创立或者修改.此表格中
-- 的行需要在相关的用户记录控制实体激活之前被设定.
--
-- 注意,用户记录对象实体和一个特殊的在控制实体被激活前不必激活的
-- 用户记录控制实体相联系.但是,和一个停止的用户记录对象实体相联系
-- 的用户记录数据实体将会停止(例如,用户记录评估状态==停止的评估).
--

用户记录控制表格    对象类型
     语法         用户记录控制实体序列
    最大输入      不可得
    状态           当前的
    描述
        "一系列数据搜集配置实体."
    ::= { 用户记录 1 }

用户记录控制实体    对象类型
     语法         用户记录控制实体
    最大输入      不可得
    状态           当前的
    描述

        "一系列设置一组将被周期取样(称为桶组)的用户定义的MIB对象的参数.

        例如,一个用户记录控制间隔的场合可以命名为用户记录控制间隔.1"

    索引 { 用户记录控制索引 }
    ::= { 用户记录控制表格 1 }


用户记录控制实体 ::= 序列 {

    用户记录控制索引             32位整数
    用户记录控制对象             32位整数
    用户记录控制希求桶           32位整数
    用户记录控制准许桶           32位整数

    用户记录控制间隔             32位整数
    用户记录控制业主             业主串
    用户记录控制状态             行状态
}

用户记录控制索引          对象类型
    语法              32位整数(1..65535)
    最大输入           不可得
    状态                当前的
    描述
        "单独标示用户记录控制表格中实体的索引.每个这样
         的实体在特殊的间隔定义了一个为一套对管理系统
         来说可得的MIB情况的参量."
    ::= { 用户记录控制实体 1 }


用户记录控制对象          对象类型
    语法                32位整数(1..65535)
    最大输入            创立读
    状态                当前的
    描述
        "在用户记录表格一部分中与此用户记录控制实体相联系的将要搜集的
         MIB对象的数目.

         如果相关的用户记录控制状态情况等于激活的(1),此对象不会被更改."
    ::= { 用户记录控制实体 2 }

用户记录控制需求桶          对象类型
    语法                32位整数(1..65535)
    最大输入            创立读

    状态                当前的
    描述
        "不连续时间间隔的被需求的次数.基于其上数据被存储到与此用户记录控
         制实体相关的用户记录表格中.

         当此对象被创立或更改,检测器为特定的检测器执行和可得的资源将把用
         户记录控制产生桶设置为尽可能接近此对象."

    DEFVAL { 50 }
    ::= { 用户记录控制实体  3 }

用户记录控制产生桶          对象类型

    语法                32位整数(1..65535)
    最大输入            只读
    状态                当前的
    描述
        "不连续取样间隔的次数.基于其上数据被存储到与此用户记录控
         制实体相关的用户记录表格中.

         当相关的用具记录控制需求桶对象被创立或者更改,当此对象被
         创立或更改,检测器为特定的检测器执行和可得的资源将把用户
         记录控制产生桶设置为尽可能接近需求的值."

        检测器不能减少此值除非原因是相关的用户记录控制要求桶对象改变的结果.

        相关的用户记录控制需求桶对象应当在此对象允许检测器精确评估为此用户
        记录控制实体需求的资源之前或同时设置.

        将会有很多次实际与此实体相联系的桶的数目少于此对象的值.在这种情况下,

        在每个取样间隔的结束,一个新的桶将会增加到用户记录表格中.

        当桶的数目达到此对象的值,一个新的桶增加到用户记录表格中,代理装置将会
        删除与此用户记录控制实体相关的最老的桶,这样,才可以增加一个新的桶.

        当此对象的值变成了一个少于当前值的数,实体将会从与此用户记录控制实体相
        关的用户记录表格中被删除.代理装置将会删除足够的此类实体以使它们的数目
        保持少于等于此对象的新值.

        当此对象的值变成了一个大于当前值的数,相关的用户记录实体的值将允许增加."
    ::= { 用户记录控制实体 4 }


用户记录控制间隔         对象类型
    语法                32位整数(1..2147483647)
    最大输入            只读
    状态                当前的
    描述
        "而次间隔中为每个与此用户记录控制实体相关联的用户记录表格
         部分中的桶,


         因为桶中的计数器在达到最大值时会无预兆的溢出,一个谨慎的管
         理员会评估任何相关的计数器的可能的溢出.考虑任何计数器在普
         通的媒体类型上可能溢出的最小时间,以及设置用户记录控制间隔
         对象到一个小于次间隔的值.
        如果相关的用户记录控制状态对象的值等于激活的(1),此对象不会被
        更改."
    DEFVAL { 1800 }
    ::= { 用户控制实体 5 }

用户记录控制业主    对象类型
    语法           业主字符串
    最大输入       创立读
    状态           当前的
    描述
        "配置访问的实体并使用配置给它的资源."
    ::= { 用户记录控制实体 6 }

用户记录控制状态   对象类型
    语法           行状态
    最大输入       创立读
    状态           当前的
    描述
        "变量记录控制实体的状态.

        一个入口没有处于激活状态除非此实体中的所有的对象
        有合适的值.

        如果此对象不等于激活的(1),在此用户记录表格中的相关的实体
        将会被删除."
    ::= { 用户记录控制实体 6 }


-- 对象表格

用户记录对象表格   对象类型
    语法          用户记录对象状态序列
    最大输入      不可得.
    状态           当前的
    描述
        "数据搜集配置实体序列."
    ::= { 用户记录 2 }


用户记录对象实体   对象类型
    语法          用户记录对象实体

    最大输入      不可得
    状态           当前的
    描述



        "周期性取样的MIB场合序列.

        当相关用户记录控制对象创立时此表格中的实体被创立.

        索引的用户记录值索引值是相关的用户记录控制实体.

        例如,一个用户记录对象变量的场合可能是用户记录对象变量.1.3"
    索引 {用户记录控制索引,用户记录对象索引 }

    ::= { 用户记录对象表格 1 }


用户记录对象实体 ::=序列 {

    用户记录对象索引              32位整数,
    用户记录对象变量              对象定义,
    用户记录对象取样类型           整数
}

用户记录对象实体索引       对象类型
    语法           32位整数(1..65535)
    最大输入       不可得
    状态           当前的
    描述
      "此索引用来描述用户记录对象表格中的实体.每个这样的实体定义
       了一个要周期性搜集的MIB情况."
    ::= { 用户记录对象实体 1 }


用户记录对象变量       对象类型
    语法           标示符
    最大输入       不可得
    状态           当前的
    描述
        "此对象描述了一个将要取样的特殊的变量.

        只有那些决定一个32位整数(32位整数,计数器,标准,时间标记)的ASN.1
        原始类型变量可以被取样.


        因为SNMP访问控制在MIB情况目录的条款下是清楚的完全的,不存在入口控
        制机制约束次对象的评估来确定只有那些对象存在在一个特殊的MIB情况.
        因为通过用户记录机制获得读入口是受控制的,在那些对此检测器具有读访

        问的情况,检测器只需对次对象同意写访问.





        在一个操作设置的过程中,在选择的MIB情况下,支持的变量名是不可得的,
        一个怀评估错误必须被返回.

        次对象在相关的用户记录控制状态对象等于激活的(1)时是不会改变的."
    ::= { 用户记录对象实体 2 }

用户记录对象取样类型       对象类型
    语法           整数{
                   绝对值(1),
                   数(2)
              }
    最大输入       创立读
    状态           当前的

    描述
        "为用户记录表格选存储对选择变量抽样的方法.


         如果此对象的值为绝对值(1),被选择的变量的值将被直接拷贝到记录桶.

         如果此对象的值为数(2),在最后抽样被选择的变量的值将从当前评估中
         删除,而且区别将会被存储到记录桶.如果相关的用户记录对象变量情况
         在先前的抽样间隔中不可得,则一个三角抽样是不可能的,为此间隔的相
         关的用具记录Val状态的值将为值不可得(1).
 

         如果相关用户记录控制状态对象等于激活的(1),次对象不会被改变.
   ::= { 用户记录对象实体 3 }

-- 数据表格

用户记录表格        对象类型
    语法          用户记录实体序列
    最大通道      不可得
    状态            当前的
    描述
        "定义在记录实体中的用户序列."



    ::= { 用户记录 3 }

用户记录实体       对象类型
    语法          用户记录实体
    最大通道       不可得
    状态         当前的
    描述
        "定义用户变量的一个历史抽样.此抽样和与用户记录控制实体相联系,此实体
         为这些抽样的一个规则的搜集设置了变量.

         索引中用户记录控制索引的值在实体被创立时定义了用户记录控制实体.

         索引中用户记录对象索引的值在实体创立时定义了用户记录对象实体.

         例如,一个用户记录Abs值情况,提供了一个有用户记录实体.1和用户对象实
         体.1.5定义的一个变量搜集的第14个取样,将被命名为用户记录Abs值.1.14.5"
    索引 { 用户记录控制索引,用户记录抽样索引,
           用户记录对象索引  }
    ::= { 用户记录表格 1 }

用户记录实体::= 序列 {
    用户记录抽样索引       32位整数
    用户记录间隔开始       时间信息
    用户记录间隔结束       时间信息
    用户记录Abs值         32为标准
    用户记录列状态         整数
}

用户记录抽样索引          对象类型
    语法              32位整数(0..2147483647)
    最大输入          不可得
    状态                当前的
    描述
        "单独描述此实体在所有与此用户记录控制实体相联系的抽样提供的一个索引.
         此索引开始于1,在进行一个新的抽样时以1为单位增加."
    ::= { 用具记录实体 1 }

用户记录抽样开始          对象类型
    语法              时间信息
    最大输入          只读
    状态                当前的
    描述

       "此抽样被规范化的间隔开始时系统更新时间的值.如果检测器保留一天的时
        间的记录,它将在例如此天的下一个小时开始的时候开始记录的第一个抽样,
        在那时刻开始一个抽样.


        注意,以下的规则可能要求检测器延缓搜集第一个记录的抽样,如每个抽象
        必须具有同样的间隔.同时注意,当前被搜集的抽样在此表格中是不可得的
        直到它的间隔的结束."
    ::= { 用户记录实体 2 }

用户记录抽样结束          对象类型
    语法              时间信息
    最大输入          只读
    状态                当前的
    描述
        "此抽样被规范化的间隔结束时系统更新时间的值."
    ::= { 用户记录实体 3 }

用户记录Abs值          对象类型
    语法              32为标准
    最大输入          只读
    状态                当前的
    描述
        "在上一个抽象期间特定用户统计学表格的相关的值(例如,无符号值).当前
         抽样期间此值不可得直到此抽样结束.

         为了为此抽样间隔保留真值,用户记录列状态的相关的情况必须被检查,且
         调整过的用记录Abs值也是必需的.

         抽样间隔中如果MIB境况不可被访问,此对象将为0并且用户记录列状态相
         关情况将会被设为值不可得(1)."
    ::= { 用户记录实体 4 }


用户记录列状态          对象类型
    语法              整数{
                  值不可得(1),
                  值正的(2),
                  值负的(3)
      }

    最大输入          只读
    状态                当前的

    描述


        "此对象描述了用户记录Abs值相关情况的数据的有效性和标记.

         在抽样间隔期间如果MIB情况不能被访问,则"值不可的(1)"将会被
         返回.

         如果抽样是有效的且它实际的值大于或等于零,则"值正的(2)"将会
         被返回.

         如果抽样有效且其实际的值小于零,"值负的(3)"将被返回.用户记录Abs
                值相关的情况将减少1以保持真正的取样值."
    ::= { 用户记录实体 5 }

-- 检测器配置组

--
-- 此组控制检测器不同操作参量的配置.

控制串::=文本的协定

    状态   当前的./
    描述
        "次数据类型用于和调制解调器或者一个连续的数据开关通信.一个控制
         字符串包含深层的命令来控制装置如果与遥远装置通过串行接口界面来
         互相影响.命令描述为两个特征序列,它们以"^"开始.

         下列命令由装置识别(注意,命令字符是区分大小写的.):


           ^s  输送由下一个命令或者字符串的结束终止的字符串.
           ^c  延迟跟随它的间隔的数目.删除任何接受到的数据,也不为了分析
               而将它们存储到缓冲器中.
           ^t  将由它跟随的十进制数提出的数据设置为超时.默认的超时的值为
               20秒.注意,次超时可能被一个较小连续的暂停克服.此短暂的暂停
               为相关的连续界面配置(参阅连续配置表格).

              
           ^w  等待回复串跟着那些由下一个命令或者串的结束来终止的.合适的对象
               和迟到的匹配情况被应用.例如,如果在接收的串中发现回复串
               (任何情况的合并),则将会找到一个匹配.如果当前的超时在无
                匹配的情况下过去了,则会忽视保留的控制串.
           ^!   ^ 特性.
           ^d  延迟跟着的由十进制阿拉伯数字指定的间隔的数目.

           ^b  为跟着的十进制阿拉伯数字指定的毫秒数目输送中断信息.如果无阿拉伯
               数字跟随,在默认的250毫秒后中断将被强制执行.

        以下的ASCII控制特性将被增加到'^S'输送字符串或者'^w'回复串:

           ^@    0x00
           ^A    0x01
            ..
           ^M    0x0D
            ..
           ^Z    0x1A
           ^[    0x1B
           ^    0x1C
           ^]    0x1D
           ^^    0x1E
           ^_    0x1F

        二进制数据也可以被增加到数据串中.为二进制数据的每个比特的控制序列为
        ^0x##,此处##表示数据比特的十六进制表示.两个ASCII字符(0-9,
         a-f, A-F)必须跟随^0x'控制前缀.例如,`^0x0D^0x0A'被解释为一个输送回复
         被一个行流入跟随."
    语法     延迟串

监视器性能        对象类型
    语法    比特{
        以太状态(0),
        记录控制(1),
        以太记录(2),
        警告(3),
        主机(4),
        主机顶N(5),
        矩阵(6),
        过滤器(7),
        捕获(8),
        事件(9),
        象征串ML状态(10),
        象征串PS状态(11),
        象征串ML记录(12),
        象征串PS记录(13),
        串中心(14),
        串中心命令(15),
        串中心配置(16),

        源路由(17),
        协议目录(18),
        协议描述(19),
        地址映射(20),
        nl主机(21),
        nl矩阵(22),
        al主机(23),
        al矩阵(24),
        用户记录(25),
        监测器配置(26)
    }
    最大输入    只读
    状态    当前的
    描述
        "一个由此监测器在至少一个界面上支持的RMON MIB组的暗示."
    ::= { 监测器配置 1 }

监测器软件转速    对象类型
    语法          延迟串(大小(0..15))
    最大输入       只读
    状态          当前的
    描述
        "此装置的软件修订,此串在修订不知道时将是零长度."
    ::= { 监测器配置 2 }

监测器硬件转速    对象类型
    语法          延迟串(大小(0..31))
    最大输入       只读
    状态          当前的
    描述
        "此装置的硬件修订,此串在修订不知道时将是零长度."
    ::= { 监测器配置 3 }



监测器数据时间    对象类型
    语法          八进制字符串(大小(0|8|11))
    最大输入       读写


    状态       当前的
    描述
        "监测器当前的数据和时间.



         领域   八位字节 容量                     行列
         -----  ------  --------                  -----
           1      1-2   年                        0..65536

           2       3    月                        1..12
           3       4    天                        1..31
           4       5    小时                      0..23
           5       6    分钟                      0..59
           6       7    秒                        0..60
                         (使用60为秒跳跃)
           7       8    十分之一秒                 0..9
           8       9    从UTC的方向               '+' / '-'
           9      10    从UTC的小时            0..11
          10      11    从UTC的分钟            0..59

         例如,东部时区1992年5月26日星期二凌晨1:30:15将
         显示为:

                     1992-5-26,13:30:15.0,-4:0

         注意,如果已知局部时间,将不出现时间区信息(领域8-10)
         并且如果不知道时间信息,将返回无效的串."
    ::= { 监测器配置 4 }

监测器重起控制    对象类型
    语法         整数{
                     运行(1),
                     警告导入(2),
                     冷导入(3)
                    }
    最大输入       读写
    状态          当前的
    描述
        "此对象设置为警告导入(2)会使装置使用存储在不可变记录中当前配置
         参量重起应用软件.此对象设置为冷导入(3)会使装置重新初始化不可变
         记录中的配置参量来延迟评估并重起应用软件.当装置正常运行时,此变
         量值为运行(1)."
    ::= { 监测器配置 5 }



-- 以下的下载对象并不约束观测执行附加的下载机制(在特殊执行风格中控制)的行为.
-- 更进一步的,当RMON代理装置和其他类型的系统共享一个处理器时,并不要求执行
-- 下载那些此机制下的无RMON功能.

监测器下载文件    对象类型

    语法          延迟串(大小(0..127))
    最大输入       读写
    状态          当前的
    描述
        "通过此MIB当下载是下一个命令时,将会从TFTP服务器上下载此文件.
         当没有指定文件名时,此值被设定为零长度."
    ::= { 监测器配置 6 }

监测器下载TFTP服务器    对象类型
    语法          IP地址
    最大输入      读写
    状态          当前的
    描述
        "通过此MIB当下载是下一个命令时,包含加载的导入映像的TFTP服务器的IP
                地址.当没有指定IP地址时,此值设定为`0.0.0.0'"
    ::= { 监测器配置 7 }

监测器下载行为    对象类型
    语法         序列{
                    不下载(1),
                    下载到PROM(2),
                                    下载到RAM(3)
                                    }
    最大输入       读写
    状态          当前的
    描述
        "当此对象设置为下载到RAM(2)或者下载到PROM(3),装置将停止它正常的
         操作并开始映像的下载,."
    ::= { 监测器配置 3 }
        "当此对象被设定位下载到RAM(2)或者下载到PROM(3),装置将停止正常的
         操作并开始使用TFTP协议从服务器下载由监测器下载文件规定的图像,此
         服务器由协议下载TFTP服务器指定.如果下载到RAM(2)被指定了,新的图
         像仅仅被下载到RAM(旧的图像不变地存入闪存中).如果下载到PROM(3) 
         被指定了,新的图像在它的检查和被认定为正确的后被写入闪存中.当下载
         进程结束,装置将会警告导入重起最近装入的应用程序.当装置没有下载,
         此对象的值为无下载(1)."


    ::= { 监测器配置 8 }

监测器下载下载状态    对象类型
    语法         整数{
                    下载成功(1),
                    下载状态未知(2),
                    下载通常错误(3),
                    下载服务器无应答(4),               
                    下载检验和错误(5),
                    下载不一致图像(6),
                    下载ftp文件未找到(7),
                    下载ftp进程违例(8)
 }
    最大输入       只读
    状态          当前的
    描述
        "如果有的话,最新的下载程序的状态.如果当前无下载进程此对象值为下
         载状态未知(2)."
    ::= { 监测器配置 9 }

连续配置表格      对象类型

    语法         连续配置实体序列
    最大输入     不可得
    状态          当前的
    描述
        "连续界面配置实体表格.此数据将被存入不可变记忆中,并可在监测器重起
         或者断电过程中被保护."
    ::= { 监测器配置 10 }

连续配置实体      对象类型
    语法         连续配置实体
    最大输入     不可得
    状态          当前的
    描述
        "在此设备上的一个特殊的连续界面的一套配置参数.如果装置无连续界面,
         此表格为空的.

         此索引与被分配到此连续线性界面的if索引相当."
    索引  { if索引 }
    ::= { 连续配置表格 1 }




连续配置实体::=序列{
    连续模式                     整数,
    连续协议                     整数,
    连续超时                     32位整数(1..65535),

    连续调制解调器初始化串        控制串(大小 (0..255)),
    连续调制解调器挂断串          控制串(大小 (0..255)),

    连续调制解调器连接应答        显示串(大小 (0..255)),
    连续调制解调器无连接应答      显示串(大小 (0..255)),
    连续拨号超时                  32位整数(1..65535),

    连续状态                     行状态
}


连续模式      对象类型
   语法       整数{
                 直接的(1),
                 调制解调器(2)
                 }
   最大输入     创立读
   状态        当前的
   描述
       "此连续界面上期待的输入连接的类型."

    DEFVAL { 直接的 }
    ::= { 连续配置实体 1 }

连续协议      对象类型
   语法       整数{
                 其他的(1),
                 滑动(2)
                 ppp(3)
                 }
   最大输入     创立读
   状态        当前的
   描述
       "此连续界面上将要使用的数据链接封装的数据类型."
    DEFVAL { 滑动 }
    ::= { 连续配置实体 2 }

连续超时      对象类型
   语法       32位整数(1...65535)
   最大输入     创立读
   状态        当前的
   描述
       "当管理中心通过连续链接开始通信时使用超时值.此变量表征在此连续界面上
        终止联结前静止间隔的数目.当监测器为了输送一个组而开始连接时使用连续
        拨号超时."
 Use the

    DEFVAL { 300 }
    ::= { 连续配置实体 3 }

连续调制解调器初始化串     对象类型
语法        控制串(大小(0..255))
最大输入     创立读
状态         当前的
描述
        "控制一个调制解调器如何连接到应当被初始化的连续界面的控制串.启动时
         初始化被执行一次,如果相关连续模式值为调制解调器(2),连接终止,初始化
         再被执行一次.

         对很多调制解调器都适用的一个控制传是:'^s^MATE0Q0V1X4 S0=1 S2=43^M'."
    ::= { 连续配置实体 4 }

连续调制解调器挂断串     对象类型
语法        控制串(大小(0..255))

最大输入     创立读

状态         当前的
描述
        "再此连续界面上描述如何断绝一个调制解调器连接的控制串.如果相关连续模式
         的值为调制解调器(2)时,此对象才有意义.
         对很多调制解调器都适用的一个控制传是: '^d2^s+++^d2^sATH0^M^d2'."
    ::= { 连续配置实体 5 }

连续调制解调器连接应答     对象类型
语法        显示串(大小(0..255))
最大输入     创立读

状态         当前的
描述
       "包含描述希求调制解调器的连接应答码和相关bps率子串的ASCII串.
        子串由此串的第一个特性界定.例如:
           /CONNECT/300/CONNECT 1200/1200/CONNECT 2400/2400/
           CONNECT 4800/4800/CONNECT 9600/9600
        可解释为:
            应答码           bps 率
            连接              300
            连接 1200         1200
            连接 2400      2400
            连接 4800      4800
            连接 9600      9600
        代理装置会使用此串中的信息来调解确立一个调制解调器连接时此连续界面
        的bps率.

        具有普遍适用性的一个值为:
        '/CONNECT/300/CONNECT 1200/1200/CONNECT 2400/2400/
         CONNECT 4800/4800/CONNECT 9600/9600/CONNECT 14400/14400/

        CONNECT 19200/19200/CONNECT 38400/38400/'."
    ::= { 连续配置实体 6 }

连续调制解调器无连接应答     对象类型
语法        显示串(大小(0..255))
最大输入     创立读
状态         当前的
描述
       "包含一个调制解调器在应答为什么一个连接请求失败时可能产生的应答码
        的ASCII串.应答码由此串的第一个特性界定,例如:
           /NO CARRIER/BUSY/NO DIALTONE/NO ANSWER/ERROR/
        当尝试建立一个调制解调器连接时,如果以上的应答码中的一个通过此连续
        界面被收到了,代理装置会发出由连续调制解调器挂断串描述的挂断命令.

        具有普遍适用性的一个值为:
        '/NO CARRIER/BUSY/NO DIALTONE/NO ANSWER/ERROR/'."
    ::= { 连续配置实体 7 }

连续拨号超时        对象类型
语法        32位整数(1..65535)
最大输入     创立读
状态         当前的
描述
        "当监测器以连接管理中心为目的开始一个连续连接时,使用超时值.
         此变量提供了终止在此连续界面上的连接之前允许的静止间隔的数目."
    DEFVAL { 20 }
    ::= { 连续配置实体 8 }

连续状态     对象类型
语法        行状态
最大输入     创立读

状态         当前的
描述
       "此连续配置实体的状态.
        一个实体只有在此实体中所有的对象都有合适的值时才处于
        激活状态."
    ::= { 连续配置实体 9 }

网络配置表格   对象类型
语法        网络配置实体串
最大输入     不可得
状态         当前的
描述
        "网络配置实体的表格."
    ::= { 监测器配置 11 }

网络配置实体   对象类型
语法        网络配置实体
最大输入     不可得
状态         当前的
描述
        "为此设备上的一个特定的网络界面提供的一套配置参数.如果此装置无
         网络界面,此表格为空.

         此索引与分配给通讯界面的if索引相当."
    索引  { if索引 }
    ::= { 网络配置表格 1 }

网络配置实体::=序列 {
    网络配置IP地址           IP地址,
    网络配置子网掩饰         IP地址,
    网络配置状态             行状态
}

网络配置IP地址   对象类型
语法        IP地址
最大输入    创立读
状态         当前的
描述

       "此网络界面的IP地址.此对象的缺省值为0.0.0.0.如果网络配置IP地址
        或者网络配置子网掩饰为 0.0.0.0,则当此装置导入,它可以使用导入TP

              来搞清楚这些数据的值.如果导入TP在装置在网络上表述之前失败了,此值
        必须被设定(例如,通过一个连接到此设备上的终端).如果导入TP被使用了,
        应当注意不要过于频繁的输送导入IP广播并且如果没有接受到回复不再输送."
    ::= { 网络配置实体 1 }


网络配置子网掩码   对象类型
语法        IP地址
最大输入     不可得
状态         当前的
描述
       "此网络界面的子网掩码.此对象的默认值为0.0.0.0.如果网络配置IP地址
        或者网络配置子网掩码为 0.0.0.0,则当此装置导入,它可以使用导入TP
              来搞清楚这些数据的值.如果导入TP在装置在网络上表述之前失败了,此值
        必须被设定(例如,通过一个连接到此设备上的终端).如果导入TP被使用了,
        应当注意不要过于频繁的输送导入IP广播并且如果没有接受到回复不再输送."
    ::= { 网络配置实体 2 }


网络配置状态   对象类型
语法        行状态
最大输入     创立读
状态         当前的
描述
       "此网络配置实体的状态.

        一个实体只有在此实体中所有的对象都有合适的值时才处于
        激活状态."
    ::= { 网络配置实体 3 }

网络配置默认网关   对象类型
语法        IP地址
最大输入     创立读
状态         当前的
描述
        "默认网关的IP地址.如果此值没有被定义或者不可知,此值为0.0.0.0."
    ::= { 监测器配置 12 }

-- 中断目的表格
--
-- 此表格为设备上发生的中断定义了目的地址.此表格管理了至少一个中断目的实体.
--
-- 相同的间隔会被输送到所有此实体中定义的目的中,这些实体的间隔目的组与事件
   组(由RMON MIB定义)相同.此表格中的信息将会被存入不可变内存.如果装置硬件
   重起,此信息会被重设为默认值.

间隔目的表格     对象类型
语法             间隔目的实体序列
最大输入         不可得
状态             当前的
描述
        "间隔目的实体的序列."
    ::= { 监测器配置 13 }

间隔目的实体     对象类型
语法             间隔目的实体
最大输入         不可得
状态             当前的
描述
        "此时体包含一个目的IP地址,为此组将向那里输送间隔."
    索引 { 间隔目的索引 }
    ::= { 间隔目的表格 1 }

间隔目的实体::=序列 {
    间隔目的索引                32位整数,
    间隔目的组                  八进制字符串,
    间隔目的协议                整数,

    间隔目的地址                八进制字符串,
    间隔目的业主                业主串,
    间隔目的状态                行状态
}

间隔目的索引     对象类型
语法             32位整数(1...65535)
最大输入         不可得
状态             当前的
描述
        "单独定义此间隔目的实体的值."
    ::= { 间隔目的实体 1 }

间隔目的组     对象类型
语法             八进制串(大小(1..127))
最大输入         创立读
状态             当前的
描述
        "此目的地址属于的组.此实体与RMON MIB中事件组的值等于此对象的值的
         事件对象相关.每次一个相关的事件实体对每个事件输送一个间隔时,此
         间隔将被送到间隔目的表格中的每个间隔目的组等于事件组的地址,

        当相关间隔目的状态对象等于激活的(1)时,此对想不会被改变."
    ::= { 间隔目的实体 2 }

间隔目的协议     对象类型
语法            整数{
                 ip(1),
                              ipx(2)
                              }
最大输入         创立读
状态             当前的
描述
        "输送此间隔时的协议."
    ::= { 间隔目的实体 3 }


间隔目的地址     对象类型
语法            八进制字符串
最大输入         创立读
状态             当前的
描述
        "此实体作用是输送间隔的地址.

         如果相关的间隔目的协议对象的值等于ip(1),此对象的解码与snmpUDP地址文本

         协定[RFC 1906]相同:
          -- 对一个SnmpUDP地址它长度为6;
          --
          -- 八位字节   容量            解码
          --  1-4     IP地址            网络比特顺序
          --  5-6     UDP端口           网络比特顺序


        如果相关间隔目的对象等于ipx(2),此对象解码和此对象的解码与snmpUDP地址文
本
         协定[RFC 1906]相同:
          -- 对一个SnmpIPX地址它长度为12;
          --
          --  八位字节   容量            解码
          --  1-4     网络号            网络比特地址
          --  5-10    物理地址          网络比特地址
          -- 11-12    插座地址          网络比特地址

        相关的间隔目的状态对象等于激活的(1)时,此对象不会被改变."

    ::= { 间隔目的实体 4 }

间隔目的业主     对象类型
语法            业主串
最大输入         创立读
状态             当前的
描述
        "分配给此入口并使用分配给它的资源的实体."
    ::= { 协议目的实体 5 }

间隔目的状态     对象类型
语法            行状态
最大输入         创立读
状态             当前的
描述
        "此间隔目的实体的状态.


         只有当此实体中所有的对象都含有一个合适的值此实体才存在."
    ::= { 间隔目的实体 6 }

-- 连续连接表格
--
-- 装置可以使用SLIP来和一个管理中心通信.为了使设备可以通过SLIP输送间隔,
   它必须能够在连续界面开始一个连接.连续连接表格存储了为这样的开始连接
   需要的参数.

连续连接表格     对象类型
语法            连续连接实体序列
最大输入        不可得
状态             当前的
描述
        "连续连接实体的一个序列."

    ::= { 监测器配置 14 }

连续连接实体    对象类型
语法            连续连接实体
最大输入        不可得
状态             当前的
描述
        "基于一个连续线路为一个SLIP的配置."
    索引 { 连续连接索引 }
    ::= { 连续连接表格 1 }

连续连接实体::=序列{
    连续连接索引                    32位整数,
    连续连接目的IP地址               IP地址,
    连续连接类型                    整数,
    连续连接拨号串                  控制串,
    连续连接开关连接下述             控制串,
    连续连接开关断开连接下述         控制串,
    连续连接开关重起下述             控制串,
    连续连接业主                    业主串,
    连续连接状态                     行状态

}

连续连接索引    对象类型
语法            32位整数(1..65525)
最大输入        不可得
状态             当前的
描述
        "单独描述此连续连接实体的值."
    ::= { 连续连接实体 1 }

连续连接目的ip地址    对象类型
语法            ip地址
最大输入        创立读
状态             当前的
描述
        "可达到此连续连接另一端的IP地址.如果相关的连续连接状态对象
         等于激活的(1),此对象不会被改变."
    ::= { 连续连接实体 2 }


连续连接类型    对象类型
语法            整数{
                   直接的(1),
                   调制解调器(2),
                   开关(3),
                   调制解调器开关(4)
                   }
最大输入        不可得
状态             当前的
描述
        "将要进行的对外连接的类型.如果此对象等于直接的(1),一个直接的连续
         连接被装载.如果此对象等于调制解调器(2),连续连接拨号串将被用来进
         行一个调制解调器连接.如果此对象为开关(3),连续连接开关连接下述被

        用来建立一个连接基于一个连续数据开关,并且连续连接开关断开连接下述
        被用来停止此连接.如果此对象等于调制解调器(4),在建立一个调制解调器
        连接后紧跟着一个开关连接.

        如果相关的连续连接状态等于激活的(1),此对象不会被改变."

    DEFVAL { 直接的 }
    ::= { 连续连接实体 3 }

连续连接拨号串    对象类型
语法            控制串(大小(0..255))
最大输入        创立读
状态             当前的
描述
        "描述为建立一个连接而如何拨号的控制串.此串应当包括拨号的
         预先配置和后续配置.例如:`^s^MATD9,888-1234^M'' 将指示
         监测器在输送一个费用会送后跟随拨号预先配置ATD'',电话号码
       ``9,888-1234'',和一个作为拨号后续配置的费用会送.如果相关连
         续连接状态的值为激活的(1),此对象不会被改变."
    ::= { 连续连接实体 4 }


连续连接开关连接下述    对象类型

语法            控制串(大小(0..255))
最大输入        创立读
状态             当前的
描述
        "描述如何建立一个数据开关连接的控制串.如果相关连
         续连接状态的值为激活的(1),此对象不会被改变."
    ::= { 连续连接实体 5 }


连续连接开关断开连接下述    对象类型
语法            控制串(大小(0..255))
最大输入        创立读
状态             当前的
描述

        "描述如何终止一个数据开关连接的控制串.如果相关连
         续连接状态的值为激活的(1),此对象不会被改变."
    ::= { 连续连接实体 6 }

连续连接开关重起下述    对象类型
语法            控制串(大小(0..255))
最大输入        创立读
状态             当前的
描述
         "描述在超时时如何重起一个数据连接的控制串.如果相关连
         续连接状态的值为激活的(1),此对象不会被改变."
    ::= { 连续连接实体 7 }

连续连接业主     对象类型
语法            业主串
最大输入        创立读
状态             当前的
描述
        "配置入口并因而使用分配给它的资源的实体."
    ::= { 连续连接实体 8 }

连续连接状态     对象类型
语法            行状态
最大输入        创立读
状态             当前的
描述

        "此连续连接实体的状态.

        如果管理员在连续联接类型设定为调制解调器(2)或者调制解调器开关(4)
        且连续联接拨号串为零长度串或者不能被作为一个联接串被正确地解析时,
        尝试将此对象设定位激活的(1),设置要求会被坏值(3)拒绝.

        如果管理员在连续联接类型设定为开关(3)或者调制解调器开关(4)且连续
        联接开关联接下述或连续联接开关要求下述为零长度串或者不能被作为一

        个联接串被正确地解析时,尝试将此对象设定位激活的(1),设置要求会被坏
        值(3)拒绝.

        一个入口只有在其中的所有对象都有合适的值时才存在."
    ::= { 连续联接实体 9 }



--
-- 为RMON 2设备对RMON 1 MIB做的扩展
--
-- 这些扩展包括适用于所有控制表格的标准最新创立时间文本协定,为信息包提供
   可变长度偏移的增加的顾虑器实体.


-- 以下的每一个,除了过滤器延迟帧,是只读对象,当执行时且相关RMON 1行被创立
   时自动出现.


以太状态2表格     对象类型
语法            以太状态2实体序列
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    ::= { 统计学表 4 }

以太状态2实体     对象类型
语法            以太状态2实体
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 以太状态实体 }
    ::= { 以太状态2表格 1 }

以太状态2实体::=序列 {
    以太状态丢失帧         32位计数器,
    以太状态创立时间        最新创立时间
}

以太状态丢失帧     对象类型
语法            32位计数器
最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,

        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."

    ::= { 以太状态2实体  1 }


以太状态创立时间  对象类型
    语法           最新创立时间
    最大输入       只读
    状态           当前的
    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重
         新创立."
    ::= { 以太状态2实体 2 }

记录控制2表格     对象类型
语法            记录控制2实体序列
最大输入        不可得
状态             当前的
描述

        "包含增加到ROMN-1的ROMN-2."
    ::= { 记录  5  }

记录控制2实体    对象类型

     语法         记录控制实体

    最大输入      不可得
    状态           当前的
    描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 记录控制实体 }
    ::= { 记录控制2表格 1 }


记录控制2实体 ::= 序列 {
    记录控制丢失帧     32位计数器
}

记录控制丢失帧     对象类型
语法            32位计数器
最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 记录控制实体  1 }
       
记录控制2表格        对象类型
    语法          主机控制实体序列
    最大通道      不可得
    状态            当前的
    描述
       "包含增加到ROMN-1的ROMN-2."
::= { 主机  4}

主机控制2实体     对象类型
语法            主机控制2实体
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 主机控制实体 }
    ::= { 主机控制2表格 1 }
主机控制2实体::=序列 {
    主机控制丢失帧         32位计数器,
    主机控制创立时间        最新创立时间
}

主机控制丢失帧     对象类型

语法            32位计数器
最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 主机控制2实体  1 }
   
主机控制创立时间  对象类型
    语法           最新创立时间
    最大输入       只读

    状态           当前的
    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重
         新创立."
    ::= { 主机控制2实体 2 }


矩阵控制2表格     对象类型
语法            矩阵控制2实体序列
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    ::= { 矩阵  5  }

矩阵控制2实体     对象类型

语法            矩阵控制2实体
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 矩阵控制实体 }
    ::= { 矩阵控制2表格 1 }
矩阵控制2实体::=序列 {
    矩阵控制丢失帧         32位计数器,
    矩阵控制创立时间        最新创立时间
}

矩阵控制丢失帧     对象类型
语法            32位计数器
最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 矩阵控制2实体  1 }
矩阵控制创立时间  对象类型
    语法           最新创立时间
    最大输入       只读
    状态           当前的
    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重
         新创立."
    ::= { 矩阵控制2实体 2 }


信道2表格     对象类型
语法            信道2实体序列
最大输入        不可得

状态             当前的

描述
        "包含增加到ROMN-1的ROMN-2."
    ::= { 过滤器 3  }

信道2实体     对象类型
语法            信道2实体
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 信道实体 }
    ::= { 信道2表格 1 }
信道2实体::=序列 {
    信道丢失帧         32位计数器,
    信道创立时间        最新创立时间
}

信道丢失帧     对象类型
语法            32位计数器
最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,

        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 信道2实体  1 }

信道创立时间  对象类型
    语法           最新创立时间
    最大输入       只读

    状态           当前的
    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重
         新创立."
    ::= { 信道2实体 2 }

象征串ML状态2表格     对象类型
语法            象征串ML状态2实体序列
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    ::= { 统计学表  5}

象征串ML状态2实体     对象类型
语法            象征串ML状态2实体
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 象征串ML状态实体 }
    ::= { 象征串ML状态2表格 1 }
象征串ML状态2实体::=序列 {
    象征串ML状态丢失帧         32位计数器,
    象征串ML状态创立时间        最新创立时间
}

象征串ML状态丢失帧     对象类型
语法            32位计数器
最大输入        只读
状态             当前的
描述

       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 象征串ML状态2实体  1 }

象征串ML状态创立时间  对象类型
    语法           最新创立时间
    最大输入       只读
    状态           当前的
    描述

        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重
         新创立."
    ::= { 象征串ML状态2实体 2 }

象征串P状态2表格     对象类型
语法            象征串P状态2实体序列
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."

    ::= { 统计学表  6}

象征串P状态2实体     对象类型
语法            象征串P状态2实体
最大输入        不可得
状态             当前的

描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 象征串P状态实体 }
    ::= { 象征串P状态2表格 1 }
象征串P状态2实体::=序列 {
    象征串P状态丢失帧         32位计数器,
    象征串P状态创立时间        最新创立时间
}

象征串P状态丢失帧     对象类型
语法            32位计数器

最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 象征串P状态2实体  1 }

象征串P状态创立时间  对象类型
    语法           最新创立时间
    最大输入       只读
    状态           当前的
    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重

         新创立."

    ::= { 象征串P状态2实体 2 }

循环中心控制2表格     对象类型
语法            循环中心控制2实体序列
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    ::= { 象征串 6}

循环中心控制2实体     对象类型
语法            循环中心控制2实体
最大输入        不可得
状态             当前的

描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 循环中心控制实体 }
    ::= { 循环中心控制2表格 1 }
循环中心控制2实体::=序列 {
    循环中心控制丢失帧         32位计数器,
    循环中心控制创立时间        最新创立时间
}

循环中心控制丢失帧     对象类型
语法            32位计数器
最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."

    ::= { 循环中心控制2实体  1 }

循环中心控制创立时间  对象类型
    语法           最新创立时间
    最大输入       只读
    状态           当前的
    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重
         新创立."
    ::= { 循环中心控制2实体 2 }

源路由状态2表格     对象类型
语法            源路由状态2实体序列
最大输入        不可得
状态             当前的
描述
        "包含增加到ROMN-1的ROMN-2."
    ::= { 象征串 8}

源路由状态2实体     对象类型
语法            源路由状态2实体
最大输入        不可得
状态             当前的

描述
        "包含增加到ROMN-1的ROMN-2."
    增加 { 源路由状态实体 }
    ::= { 源路由状态2表格 1 }
源路由状态2实体::=序列 {
    源路由状态丢失帧         32位计数器,

    源路由状态创立时间        最新创立时间
}


源路由状态丢失帧     对象类型
语法            32位计数器
最大输入        只读
状态             当前的
描述
       "由监测器接收到的且没有在状态丢失事件中计数的帧的总数,但是为了它,
        监测器选择无论何种原因对此实体不计数.经常,当监测器用尽资源并决定
        不再搜集时发生这种情况.
        这个计数并不包括没有被计数的信息包因为它们是MAC层错误.

        注意,不像丢失事件计数器,此数据表示实际丢失帧的数目."
    ::= { 源路由状态2实体  1 }

源路由状态创立时间  对象类型
    语法           最新创立时间
    最大输入       只读
    状态           当前的

    描述
        "当控制实体被最后激活时系统更新时间的值.
         这可以被管理中心用作确定表格还没有被删除并在两次监测之间被重

         新创立."
    ::= { 源路由状态2实体 2 }

过滤器2表格     对象类型
语法            过滤器2实体序列
最大输入        不可得
状态             当前的
描述

        "为RMON-1过滤器表格提供一个可变长度的信息包过滤器特性."
    ::= { 过滤器 4}

过滤器2实体     对象类型
语法            过滤器2实体
最大输入        不可得

状态             当前的
描述
        "为RMON-1过滤器表格提供一个可变长度的信息包过滤器特性."

    增加 { 过滤器实体 }
    ::= { 过滤器2表格 1 }
过滤器2实体::=序列 {
    过滤器协议目录数据局部索引         32位计数器,
    过滤器协议目录局部索引        32位整数
}

过滤器协议目录数据局部索引     对象类型
语法            32位整数(0..2147483647)
最大输入        创立读
状态             当前的
描述
        "当此对象设置为非零值,与以下操作在每个信息包上的执行有关的过滤器;

        1) - 如果信息包与由此对象描述的协议目录入口不匹配,丢弃此信息包并
             退出(例如,丢弃不是已定义的协议.)

        2) - 如果相关的过滤器协议目录局部索引非零且信息包与由此对象描述的
             协议目录入口不匹配,丢弃次数据包,退出.
        3) - 如果信息包匹配,执行通常的过滤器规则就好像此指明的协议的开始是
             此信息包的开始,并潜在的要求将过滤器重起值传给信息包."
    DEFVAL { 0 }
    ::= { 过滤器2实体 1 }

过滤器协议目录局部索引     对象类型
语法            32位整数(0..2147483647)
最大输入        创立读
状态             当前的
描述
        "当此对象被设定为非零值,相关的过滤器将丢弃不适合此协议目录入口的
         信息包."
    DEFVAL { 0 }
    ::= { 监测器2实体 2 }

-- 一致宏


rmon2MIB一致   对象描述 ::={ rmon一致 1 }
rmon2MIB组     对象描述 ::={ rmon一致 2 }
rmon2MIB一致       模块一致
    状态      当前的
    描述
        "描述了为ROMON2 MIB的一致性的需求."

    模块 --此模块
        强制组           { 协议目录组,
                           协议分配组,
                           地址映射组,
                           nl主机组,
                           nl矩阵组,
                           用户记录组,
                           监测器信息组  }


        组   rmon1增加组
        描述
            "rmon1增加组对执行RMON [RFC 1757 ]的系统来说是强制型的."
    ::= { rmon2MIB一致 1 }

rmon2MIB应用曾一致    模块一致
    状态     当前的

    描述
        "描述对具有应用层增加的RMON MIB以一致性的要求."
    模块  -- 此模块
        强制组           { 协议目录组,
                           协议描述组,
                           地址映射组,
                           nl主机组,
                           nl矩阵组,
                           al主机组,
                           al矩阵组,
                           用户记录组,
                           监测器信息组, }

        组      rmon1增加组
        描述
            "rmon1增加组对执行RMON [RFC1757]的系统是强制性的."
    ::= { rmon2MIB一致 2 }


协议目录组        对象组
    对象  { 协议目录最新改变,

              协议目录局部索引,协议目录说明,
              协议目录类型,协议目录地址映射配置,
              协议目录主机配置,协议目录矩阵配置,


              协议目录业主,协议目录状态 }
    状态   当前的
    描述
        "列举监测器具有警示一致性并允许增加,删除,并配置此列表中的实体
         的协议的清单."
    ::= { rmon2MIB组 1 }

协议目录描述组     对象类型
    对象    { 协议目录控制数据源,
              协议目录控制丢失帧,
              协议目录控制创立时间,
              协议目录控制业主,协议目录控制状态,
              协议目录状态Pkt, 协议目录状态八位字节 }
    状态   当前的
    描述
        "为在一个网络段发现的不同的协议搜集相关的八位字节和信息包总数."
    ::= { rmon2MIB组 2 }


地址映射组     对象类型
    对象    { 地址映射增加,地址映射删除,
              地址映射最大希求实体,
              地址映射控制数据源,
              地址映射控制丢失帧,
              地址映射控制业主,地址映射控制状态,
              地址映射物理地址,

              地址映射最新更新 }
    状态  当前的
    描述
        "将MAC地址列举给监测器发现的网络层地址封装或者它们最后被
         发现的界面."
    ::= { rmon2MIB组 3 }

nl主机组   对象类型
    对象    { hl主机控制数据源,
              hl主机控制Nl丢失帧,hl主机控制NL增加,
              hl主机控制NL减少,
              hl主机控制NL最大希求实体,

              hl主机控制AL丢失帧,hl主机控制AL增加,
              hl主机控制AL删除,
              hl主机控制AL最大希求实体,hl主机控制业主,
              hl主机控制状态,hl主机输入Pkt, nl主机输出OutPkt,
              nl主机输入八位字节,nl主机输出八位字节,
              nl主机输出无MacUnicastPkt, nl主机创立时间 }
    状态  当前的
    描述
        "
对从和向由监测器发现的每个网络地址的通信的总量进行计数.
        注意,当hl主机控制表格也含有控制一个可选择al主机表格的对象时,此al主机表
格的执行在此组中并无完全要求."
    ::= { rmon2MIB组 4 }

nl矩阵组      对象类型
    对象    { hl矩阵控制数据源,
              hl矩阵控制Nl丢失帧,hl矩阵控制NL增加,
              hl矩阵控制NL减少,
              hl矩阵控制NL最大希求实体,
              hl矩阵控制AL丢失帧,hl矩阵控制AL增加,
              hl矩阵控制AL删除,
              hl矩阵控制AL最大希求实体,hl矩阵控制业主,
              hl矩阵控制状态,
              nl矩阵SDPkt, nl矩阵SD八位字节,
              nl矩阵SD创立时间,
              nl矩阵DSPkt,nl矩阵DS八位字节,nl矩阵DS创立时间,
              nl矩阵顶N控制矩阵索引,
              nl矩阵顶N控制比率基础,
              nl矩阵顶N控制时间保留,
              nl矩阵顶N控制发生报告,
              nl矩阵顶N控制持续时间,
              nl矩阵顶N控制需求大小,
              nl矩阵顶N控制产生大小,
              nl矩阵顶N控制业主,nl矩阵顶N控制状态,

              nl矩阵顶N控制协议目录局部索引,
              nl矩阵顶N源地址,nl矩阵顶N目的地址,
              nl矩阵顶NPkt率,nl矩阵顶N反Pkt率,
              nl矩阵顶N八位子节率,nl矩阵顶N反八位子节率
             }
    状态  当前的
    描述
        "对由监测器发现的每对网络地址之间的通信两进行计数.注意,当hl矩阵表格
         也含有控制随意al矩阵表格的对象时,在此组中al矩阵表格并不要求完全执行."
    ::= { rmon2MIB组 5 }


al主机组    对象类型
    对象     { al主机输入Pkt, al主机输出Pkt,
              al主机输入八位字节,al主机输出八位字节,
              al主机创立时间 }
    状态    当前的
    描述
        "由协议,对在由监测器发现的每个网络地址发出和输入的通信的总量进行
         计数.此组的执行要求网络层主机组的执行."
    ::= { rmon2MIB组 6 }

al矩阵组   对象类型
    对象    { al矩阵SDPkt, al矩阵SD八位字节, al矩阵SD创立时间,

              al矩阵DSPkt, al矩阵DS八位字节, al矩阵DS创立时间,

              al矩阵顶N控制矩阵索引,
              al矩阵顶N控制率基础,
              al矩阵顶N控制时间保留,
              al矩阵顶N控制产生报告,
              al矩阵顶N控制维持时间,
              al矩阵顶N控制要求大小,
              al矩阵顶N控制产生大小,
              al矩阵顶N控制开始时间,
              al矩阵顶N控制业主,al矩阵顶N控制状态,
              al矩阵顶N控制目录局部索引,
              al矩阵顶N源地址,al矩阵顶N目的地址,
              al矩阵顶N应用层协议目录局部索引,
              al矩阵顶NPkt率, al矩阵顶N反Pkt率,
              al矩阵顶N八位子节率,al矩阵顶N反八位子节率
    状态   当前的
    描述
        "由协议,对在由监测器发现的每对网络地址之间的通信的总量进行
         计数.此组的执行要求网络层矩阵组的执行."
    ::= { rmon2MIB组 7 }

用户纪录组    对象类型
    对象    { 用户纪录控制对象,
              用户纪录控制需求桶,

              用户纪录控制产生桶,
              用户纪录控制间隔,
              用户纪录控制业主,用户纪录控制状态,
              用户纪录对象变量,用户纪录对象样本类型,
              用户纪录间隔开始,用户纪录间隔结束,
              用户纪录Abs值,用户纪录Val状态 }
状态   当前的
    描述
        "用户纪录组提供监测器上的MIB对象的纪录信息的用户定义的搜集."
    ::= { rmon2MIB组 8 }

监测器信息组  对象类型
    对象    { 监测器能力,
              监测器软件速度,监测器硬件速度,监测器日期时间 }
    状态  当前的
    描述
        "此组描述了监测器的不同操作变量以及对监测器局部时间的控制."


    ::= { rmon2MIB组 9 }

监测器配置   对象类型
    对象    { 监测器重起控制,监测器下载文件,
              监测器下载TFTP服务器,监测器下载行动,
              监测器下载状态,
              连续模型,连续超时,
              连续调制解调器初始化串,连续调制解调器挂断串,
              连续调制解调器联接应答,连续调制解调器非联接应答,
              连续拨号超时,连续状态,
              网络配置IP地址,网络配置字妄掩码,
              网络配置状态,网络默认入口,
              间隔目的组,间隔目的协议,间隔目的地址,
              间隔目的业主,间隔目的状态,
              连续联接IP地址,连续联接类型,
              连续联接拨号串,连续联接开关联接下述,
              连续联接开关断开联接下述,
              连续联接开关重起下述,
              连续联接业主,连续联接状态 }
    状态   当前的

    描述
        "此组控制监测器不同操作变量的配置."
    ::= { rmon2MIB组 10 }

rmon1增加组   对象类型
    对象    { 纪录控制丢失帧,主机控制丢失帧,
              主机控制创立时间,矩阵控制丢失帧,
              矩阵控制创立时间,信道丢失帧,

              信道创立时间,过滤器协议目录数据局部索引,
              过滤器协议目录局部索引 }
    状态   当前的

    描述
        "此组像RMON-1增加了一些组来帮助管理中心."
    ::= { rmon2MIB组 11 }

rmon1以太网增加组  对象类型
    对象  { 以太状态丢失帧,以太状态创立时间}
    状态   当前的
    描述
        ""此组像RMON-1增加了一些组来帮助管理中心."
    ::= { rmon2MIB组 12 }

rmon1标示串增加组   对象类型
    对象 { 标示串ML状态丢失帧,
              标示串ML状态创立时间,
              标示串P状态丢失帧,标示串P创立时间,
              串中心控制丢失帧,
              串中心控制创立时间,
              源路由状态丢失帧,
              源路由状态创立时间 }
    状态   当前的
    描述
        ""此组像RMON-1增加了一些组来帮助管理中心."
    ::= { rmon2MIB组 13 }






7.  安全考虑


为了执行此MIB,一个监测器必须捕获在本地连接的网络上的所有信息包,包括在
   第三者之间的信息包.分析这些信息包用以搜集网络地址,协议使用信息,和交谈
   统计学表格.此性质的数据在一些情况下会被慎重考虑,在这些情况下,管理员可能
   对监测器的SNMP访问进行限制.

   一个贯彻此MIB的监测器很可能执行RMON[RFC 1757],后者包含了会送被捕获信
   息包大小的功能,潜在包括敏感的用户数据或者密码.推荐对这些功能的SNMP访
   问进行限制.

8. 附录 -  时间过滤器执行注意事项

   1) 操作理论

   时间过滤器机制允许一个NMS减少一个表格上操作要求的SNMP处理的数目.与
   一个时间过滤器索引合并的表格的轮流监测可被减少到理论最小值(如果正确使
   用).这可以很容易由一个代理装置执行,通过一个和使用相同的时间过滤器表格
   的NMS应用软件数目无关的方法.

   尽管相同的时间过滤器可能暗示一个改变事件的纪录被代理装置维护,这不是问
   题.一个时间过滤器值提供对象情况当前的值,而不是有时间过滤器索引值显示时
   的'保存'的值.注意,时间过滤器对象仅仅在索引条款(常常不可得)中出现,因此
   它们的值从不会被重新得到.由设计,一个时间过滤器情况实际的值并不像它本身
   那样有意义(不是最新时间标记).

   时间过滤器是一个应用在内在得到*PDU处理中的布尔型过滤功能.如果指定的
   最新变化时间小于某特定的时间过滤器索引值,则此情况比考虑为'非当前的'
   (为了得到下一个和得到多数PDU跳过:'无此情况'或者返回到请求.

1.1) 代理装置对一个时间过滤表格的执行

   在执行中,时间过滤器行(一个对应一个系统更新时间纪录)仅仅是概念上的.
   代理装置仅仅过滤一个真正的表格,其基于:
       * 系统更新时间的当前值.
       * 在不同封装中通过的时间过滤器值.
       * 每个要求的计数器(代理装置执行需求)的最新更新时间标记.


   例如,为了执行一个时间过滤器计数器,一个代理装置保持一个时间标记在一个32比特
   大小的存储空间中,初始化为零.对计数器来说,需要这对任何使用设备是个增加.

   每次计数器更新,系统更新时间的当前值被存入相关的时间标记.如果此不可能或者实际
   的,则一个后台轮流监测进程必须通过对计数器值取样并与纪录值相比较来刷新时间标
记.
   时间标记更新必须在改变时间发生5秒钟内发生.




   当一个代理装置收到一个得到,得到下一个,或者得到要求一个时间过滤情况的大PDU,
      下面的代理装置已经决定了此情况在PDU中公有串定义的MIB观点下.


       /* 返回"真"如果此对象存在 */
       boolean time_filter_test (
           TimeFilter  last_modified_timestamp,
           TimeFilter  index_value_in_pdu )
       {
           if (last_modified_timestamp < index_value_in_pdu)
            return FALSE;
           else

               return TRUE;
       }

   代理装置在问题中要求此功能,而不管概念上的行的最新更新时间.换句话说,忽略
   计数器断开情况(例如,概念上的行被删除并在稍候重新被建立).一个代理装置在它
   创立时(或者对于等级或标准对象来说处于重起状态,或者对动态表格来说处于行创
   立时间)必须考虑一个对象情况改变.

   注意,使用一个值为零的时间过滤器索引将功能性的删除此过滤器,迹象此情况常存
   在一样.

1.2) NMS 对一个时间过滤器器表格的执行

   由一个NMS使用的特定的时间过滤器索引值反映了NMS轮流监测间隔,与特定的代理
   装置的系统更新时间打算有关.

   一个NMS要求对每个代理装置(初始化为零)维持一个时间标记变量,对同一个PDU中
   聚集在一起的时间过滤MIB对象的随意组.每个得到* PDU传送时间,包含一个对系统
   更新时间的要求.接收到的系统更新时间值被用作下一个轮流监测循环的时间过滤器值.
   如果一个清除了一个时间过滤组的对象的循环监测要求多于一个SNMP处理,则循环监
   的测第一个得到回答PDU中接收到的系统更新时间被存储为下一个时间过滤器值.

   给定对象的实际更新时间没有在会送的得到回答情况表示符中描述,但是更合适的,在
   得到*PDU中通过的时间过滤器的值被回送.

   一个"时间过滤的得到下一个/大清除",在每个循环监测中进行,是得到下一个
   或者得到大操作的一个级数,当以下中的一个事件发生时结束:
     1) 在得到回答中时间过滤器索引值不同于得到下一个或得到大要求中通过的
        时间过滤器索引值.计数器的值在超越此点时仍被回送(直到接收到最新改
        变时间),但是大多数情况下送回相同的值.


     2) 回送的PDU包括语义学的间隔多于希求的对象(例如,如果时间过滤器不存
        在相同与得到下一个语义).
     3) 回送无此名称或者其他情况/错误.

   注意,联合使用时间过滤器表格和得到回答 PDU压制任何最优化不管其与时间过
   滤器一同完成,因为无 PDU处理被存储,或者回送当前的时间过滤的对象值或者回
   送'无此情况'例外(SNMPv1c)或'无此名称'错误(SNMPv1).

   如果使用得到大PDU,为回答由代理装置产生的PDU选择的值,自从复制实体(平均
   大小.一个适当的时间过滤的表格,如果知道,概念上的行,或者等于期望在一个得到
   回答PDU不至于引起'太大'错误中适合的间隔的数目.

2) 时间过滤器例子

   以下的例子证明了一个NMS和代理装置如何使用一个在索引中具有时间过滤器实体
   的表格.标准俄表格被假定为包含静态的例子,但是也支持动态的表格.

2.1) 通常的假定

   foo实体 索引 { foo时间标记,fooIf索引 }
   Foo实体 = 序列{
       foo时间标记,  时间过滤器,

       fooIf索引     32位整数,
       foo计数器     32位计数器
   }

    NMS 每15分钟监测foo表格,每当代理装置开启6秒钟之后和10秒宏后
    进行基线监测.





   系统初始化时此表格中有2个静态的行.
   (foo计数器.0.1 和 foo计数器.0.2).

   行 1 按以下更新:
       系统更新时间   foo计数器.*.1 值         500
1         900            2
          2300            3

   行 2 按以下更新:
       系统更新时间   foo计数器.*.2 值         500
          1100            1
          1400            2


2.2) 从NMS观点看SNMP 的执行

   时间 nms-1000:
       # NMS 基线监测 -- 得到自从代理装置上次重起以来的所有东西.
       # 时间过滤器 == 0

       得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
            foo计数器.0);
       返回:
          系统更新时间.0 == 600
          foo计数器.0.1 == 1  # 以500时间单位增加
foo计数器.0.2 == 0  #自从在时间0创立很明显

   时间 nms-2500:
       # NMS 第一个循环监测
       # 时间过滤器索引 == 600

       得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
            foo计数器.600);
       返回:
          系统更新时间.0 == 2100
          foo计数器.600.1 == 2   # 以900时间单位增加
       foo计数器.600.2 == 2   # 以1100时间单位增加
1400
          foo计数器.601.1 == 2   # 指出清除的结束





   时间 nms-4000:
       # NMS 第二次循环监测
       # 时间过滤器 == 2100

       得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
            foo计数器.2100);
       返回:
           系统更新时间.0 == 3600

           foo计数器.2100.1 == 3  # 以2300时间单位增加
           foo计数器.2102.1 == 3  # 指出清除的结束

       # 行2的计数器的值没有返回因为自从系统更新时间==2100以来便
       # 保持不变.
       # 作为代替的,下一个行1的时间标记的值被返回.

   时间 nms-5500:
       # NMS 第三次循环监测
       # 时间过滤器 == 3600

       得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
             foo计数器.3600);
       返回:
           系统更新时间.0 == 5100
           foo表格以外的一些情况== <不关心>
           
       # 无 'foo表格' 计数器的值被返回
因为
       # 自从系统更新时间==3600以来无计数器被更新.


2.3) 处理和时间过滤器的维护
从代理装置角度Transactions and TimeFilter Maintenance: Agent
Perspective

   时间 agt-0:
       # 初始化foo表格
       foo计数器.1 = 0; 改变的.1 = 0;
       foo计数器.2 = 0; 改变的.2 = 0;

   时间 agt-500:

       # 增加 foo计数器.1
       ++foo计数器.1; 改变的.1 = 500;

   时间 agt-600
       # 应答得到大 g
       #  得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
       #       foo计数器.0);
       # (改变的 >= 0)
       # 返回两个计数器


   时间 agt-900:
       # 增加 foo计数器.1
       ++foo计数器.1; 改变的.1 = 900;

   时间 agt-1100:
       # 增加 foo计数器s.2
       ++foo计数器.2; 改变的.2 = 1100;


   时间 agt-1400:

       # 增加 foo计数器s.2
       ++foo计数器.2; 改变的.2 = 1400


   时间 agt-2100
       # 应答得到大

       # 得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
       #     foo计数器.600);
       # (改变的 >= 600)
       # 返回两个计数器的值

  时间 agt-2300:
       # 增加 foo计数器.1
       ++foo计数器.1; 改变的.1 = 2300;

   时间 agt-3600
       # 应答得到大
       # 得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
       #     foo计数器.2100);
       # (改变的 >= 2100)
       # 仅从foo表格两次返回foo计数器的值

   时间 agt-5100
       # 应答得到大
       # 得到大(nonRptrs=1, maxReps=2, 系统更新时间.0,
       #     foo计数器.3600);
       # (改变的 >= 3600)
       # 语义上的返回下两个MIB情况.

9.  感谢

   此文档由IETF 远程网络警戒工作组撰写.

10.  参考

[1]  SNMPv2 Working Group, J. Case, K. McCloghrie, M. Rose, S.
     Waldbusser, "Structure and Identification of Management
     Information for Version 2 of the Simple Network
     Management Protocol (SNMPv2)" RFC 1902, January 1996.

[2]  SNMPv2 Working Group, J. Case, K. McCloghrie, M. Rose, S.
     Waldbusser, "Textual Conventions for Version 2 of the
     Simple Network Management Protocol (SNMPv2)", RFC 1903
     January 1996.

[3]  McCloghrie, K., and M. Rose, "Management Information Base
     for Network Management of TCP/IP-based internets: MIB-II",
     STD 17, RFC 1213, March 1991.

[4]  SNMPv2 Working Group, J. Case, K. McCloghrie, M. Rose, S.
     Waldbusser, "Protocol Operations for version 2 of the
     Simple Network Management Protocol (SNMPv2)",
     RFC 1905, January 1996.

[5]  McCloghrie, K., and F. Kastenholz, "Evolution of the
     Interfaces Group of MIB-II", RFC 1573, January 1994.

[6]  Information processing systems -- Open Systems
     Interconnection -- Specification of Abstract Syntax
     Notation One (ASN.1), International Organization for
     Standardization.  International Standard 8824, (December,
     1987).

[7]  Information processing systems -- Open Systems
     Interconnection -- Specification of Basic Encoding Rules
     for Abstract Notation One (ASN.1), International
     Organization for Standardization.  International Standard
     8825, (December, 1987).

[8]  Rose, M., Editor, "A Convention for Defining Traps for
     use with the SNMP", RFC 1215, March 1991.

[9]  Waldbusser, S., "Remote Network Monitoring Management
     Information Base", RFC 1757, February 1995.

 [10] Waldbusser, S., "Token Ring Extensions to the Remote Network
     Monitoring MIB", RFC 1513, September 1993.

11.  作者地址

   Steven Waldbusser
   International Network Services


   Phone: (415) 254-4251
   EMail: waldbusser@ins.com




RFC2021――Remote Network Monitoring Management Information Base Version 2 using SMIv2
远程网络监控管理信息基础版本2――使用 SMIv2


1
RFC文档翻译计划
